{
  "levels": [
    {
      "level": 1,
      "description": "Kenalan dulu sama bahan dasar ngoding: tipe data, variabel, sama operator biar program kamu ngerti harus ngapain!",
      "title": "Tipe Data, Variabel, dan Operator",
      "background": "warung-kating",
      "character1": "Adrian",
      "character1Images": [
        "adriankampus_biasa",
        "adriankampus_marah",
        "adriankampus_senang",
        "adriankampus_kecewa",
        "adriankampus_aksi"
      ],
      "character2": "Mas Mulyo",
      "character2Images": [
        "kating_biasa",
        "kating_marah",
        "kating_senang",
        "kating_kecewa",
        "kating_aksi"
      ],
      "ilustrations": ["tipe-data", "BOOLEAN"],
      "start": "preDialog1",
      "typeStart": "preDialog",
      "preDialog": [
        {
          "id": "preDialog1",
          "text": "Adrian adalah seorang mahasiswa baru Teknik Informatika yang baru saja memasuki dunia perkuliahan. Penuh rasa ingin tahu dan semangat belajar, Adrian bermimpi menjadi seorang programmer handal. Namun, perjalanannya tidak semudah itu. Ia kerap kali merasa tertinggal dan kesulitan memahami logika pemrograman yang rumit.",
          "next": "preDialog1_2",
          "nextType": "preDialog"
        },
        {
          "id": "preDialog1_2",
          "text": "Adrian baru saja menyelesaikan kelas pemrograman pertamanya. Kepalanya terasa pening, ia pun mampir ke kafe dekat kampus. Secangkir kopi, harapnya, bisa meredakan pusing akibat deretan kode yang masih belum ia pahami. Di tengah keriuhan obrolan pengunjung, Adrian menghela napas lirih. Lalu, dari sudut kafe, sesosok familiar mendekatinya.",
          "next": "intro1",
          "nextType": "dialog"
        }
      ],
      "dialogs": [
        {
          "id": "intro1",
          "dialogs": [
            {
              "line": "Masnya daritadi saya lihat ngedumel sendiri, aman kah?",
              "reactionIndex": 1,
              "characterIndex": 2
            },
            {
              "line": "aduh mas, ini pemrogaman susah banget..",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Wah iya mas, memang susah pada awalnya karena kita ga familiar dengan mereka, tapi lama lama pasti bakal bisa kok mas.",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Oh... iya ya, tapi aku masih bingung banget sama yang namanya tipe data sama variabel.",
              "reactionIndex": 3,
              "characterIndex": 1
            },
            {
              "line": "Eh, wajahmu kok kayak familiar ya? Anak PENS juga, kan?",
              "reactionIndex": 4,
              "characterIndex": 2
            }
          ],
          "choices": [
            {
              "text": "Betul mas aduh susah banget ini programming",
              "next": "scene1_1",
              "nextType": "dialog"
            },
            {
              "text": "Loh kok mas tau saya",
              "next": "scene1_2",
              "nextType": "dialog"
            },
            {
              "text": "Hah… Masnya siapa ya?",
              "next": "scene1_3",
              "nextType": "dialog"
            }
          ],
          "next": null,
          "nextType": null
        },
        {
          "id": "scene1_1",
          "dialogs": [
            {
              "line": "Betul mas aduh susah banget ini programming",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Ah sesusah apa sih, palingan tinggal ngetik doang",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Kacaw tinggal ngetik doang",
              "reactionIndex": 1,
              "characterIndex": 1
            },
            {
              "line": "Yaudah sini aku jelasin",
              "reactionIndex": 2,
              "characterIndex": 2
            }
          ],
          "next": "materi1_1",
          "nextType": "dialog"
        },
        {
          "id": "scene1_2",
          "dialogs": [
            {
              "line": "Loh kok mas tau saya",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "iya tau dong, aku yang waktu itu ngekader kamu kocak",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Loh yang bener mas?",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Serius. Aku komdis, bro. Yang tiap malem mondar-mandir liatin kalian satu-satu.",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Hah, beneran Mas komdis? Wah… pantesan kayak familiar…",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Iya dong. Tapi tenang, aku gak se-strict itu di luar acara. By the way tadi aku denger kamu ngedumel soal pemrograman, waktunya AADP, ada apa dengan pemrogaman?",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Aduh Mas... pusing banget. Baru belajar tipe data sama variabel aja udah ngerasa kayak baca sandi alien.",
              "reactionIndex": 3,
              "characterIndex": 1
            },
            {
              "line": "Tenang jangan pusing dulu, ini masih permulaan. Coba sini aku jelasin pelan-pelan",
              "reactionIndex": 2,
              "characterIndex": 2
            }
          ],
          "next": "materi1_1",
          "nextType": "dialog"
        },
        {
          "id": "scene1_3",
          "dialogs": [
            {
              "line": "Hah… Masnya siapa ya?",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Hayoloh... gak inget ya? Aku yang jadi komdis pas kaderisasi. Yang suka mondar-mandir malem-malem, ngawasin kalian satu-satu.",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "(kaget, sambil mencoba mengingat) Serius? Wah, beneran Mas? Saya ingetnya cuma suara tegas dari kejauhan…",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "(ketawa kecil) “Haha, ya itu suaraku. Kamu tuh yang waktu itu disuruh maju gara-gara... hmm, ketiduran kan ya?” (kedip jahil)",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Wah… kok masih inget aja mas…” (senyum malu)",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Gapapa itu momen kocak, tenang, aku juga pernah jadi maba. Pusing, capek, ngantuk, tapi harus tetap jalanin semua. Gua paham kok rasanya.",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Sekarang juga pusing Mas… tugas pemrogramannya bikin kepala muter. Baru mulai belajar tipe data aja rasanya udah ribet banget.",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Nah, itu. Tadi gua liat kamu ngedumel. Makanya, ayo sini, kita bahas bareng. Gua jelasin pelan-pelan soal tipe data sama variabel. Gak ribet kok, asal ngerti logikanya.",
              "reactionIndex": 0,
              "characterIndex": 2
            }
          ],
          "next": "materi1_1",
          "nextType": "dialog"
        },
        {
          "id": "materi1_1",
          "dialogs": [
            {
              "line": "Bayangin tipe data dan variabel itu seperti wadah dengan labelnya. Biar lebih jelas, coba lihat ilustrasi ember dan kardus ini.",
              "reactionIndex": 4,
              "characterIndex": 2,
              "ilustrationIndex": 0
            },
            {
              "line": "Nah, 'ember' itu ibarat variabel float, cocok untuk 'air' atau angka desimal seperti 55.5. Tapi kalau 'air' itu kamu tuang ke 'kardus', yang ibarat variabel int, ya bakal 'bocor', desimalnya hilang karena int hanya untuk bilangan bulat!",
              "reactionIndex": 4,
              "characterIndex": 2,
              "ilustrationIndex": 0
            },
            {
              "line": "Oh jadi tipe data itu penting supaya nilai yang kita masukin sesuai dan gak rusak ya, Mas?",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Betul! Ibaratnya, label pada wadah memastikan isinya tepat. Kalau salah tipe data, program bisa error atau hasilnya gak sesuai harapan.",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Ohh… aku mulai paham, Kak. Jadi intinya tipe data itu kayak ngasih tahu komputer jenis nilai apa yang disimpan, ya?",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Yap, bener banget! Misalnya kamu mau nyimpen umur, pakai int. Kalau nyimpen nama, pakai string. Gitu.",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Terus kalau variabel itu semacam wadahnya, kan? Jadi bisa aja satu variabel berisi tipe data int, satu lagi char, dan seterusnya?",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Persis! Variabel itu kayak label di botol. Botolnya bisa beda ukuran, isinya beda, tapi semua punya label biar gak ketuker.",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Oke, jadi sekarang aku ngerti kalau tipe data itu penting banget buat bikin program yang bener.",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Nah, sekarang coba jawab soal ini ya, biar makin paham!",
              "reactionIndex": 0,
              "characterIndex": 2
            }
          ],
          "next": "soal1_1",
          "nextType": "soal"
        },
        {
          "id": "salah1_1",
          "dialogs": [
            {
              "line": "Waduh jawaban untuk tipe data kamu belum tepat.",
              "reactionIndex": 1,
              "characterIndex": 2
            },
            {
              "line": "Yah salah ya..",
              "reactionIndex": 1,
              "characterIndex": 1
            },
            {
              "line": "Hmm sepertinya ada beberapa hal yang perlu kita perhatikan di sini. Ayo kita bahas satu per satu ya?",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Oke Adrian mari kita bahas soal tipe data ini satu per satu. Pertama untuk Nama biasanya pakai tipe data yang bisa menyimpan teks, seperti string. Jadi, itu sudah tepat.",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Kedua untuk Usia, pikirkan lagi. Kalau usia itu angka yang tidak memiliki angka desimal, apa kira-kira tipe data yang cocok?",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Usia itu kan angka bulat, jadi mungkin tipe data float?",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Hmm float biasanya digunakan untuk angka yang ada desimalnya, seperti berat badan atau pengukuran yang presisi. Kalau Usia hanya angka bulat jadi tipe data yang tepat adalah tipe data yang bisa menyimpan angka bulat saja.",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Oh int ya?!",
              "reactionIndex": 2,
              "characterIndex": 1
            },
            {
              "line": "Betul! int itu untuk angka bulat. Lanjut ketiga sekarang ke Berat badan. Berat badan itu biasanya ada angka desimalnya kan? Jadi kita butuh tipe data yang bisa menyimpan angka dengan desimal. Apa yang kamu pikirkan?",
              "reactionIndex": 2,
              "characterIndex": 2
            },
            {
              "line": "Ah kalau gitu float ya? Karena ada desimalnya.",
              "reactionIndex": 2,
              "characterIndex": 1
            },
            {
              "line": "Betul sekali! float memang untuk angka desimal. Keempat untuk Nilai ujian, ini kan biasanya berupa angka bulat, ya? Jadi apa yang tepat untuk tipe data ini?",
              "reactionIndex": 2,
              "characterIndex": 2
            },
            {
              "line": "Kalau begitu tipe data yang tepat untuk Nilai ujian adalah int.",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Betul! Nilai ujian itu angka bulat jadi int memang cocok. Terakhir, Status lulus. Ini cuma punya dua kemungkinan, lulus atau tidak. Tipe data apa yang bisa mewakili dua pilihan seperti itu?",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Kayaknya itu bool ya? Karena hanya ada dua nilai: benar atau salah.",
              "reactionIndex": 2,
              "characterIndex": 1
            },
            {
              "line": "Tepat sekali! Boolean itu untuk dua kemungkinan itu. Biar lebih kebayang, bool itu seperti saklar lampu pada ilustrasi ini.",
              "reactionIndex": 4,
              "characterIndex": 2,
              "ilustrationIndex": 1
            },
            {
              "line": "Kalau lampu 'ON' atau menyala, itu TRUE atau benar. Kalau 'OFF' atau mati, itu FALSE atau salah. Komputer pakai ini untuk membuat keputusan.",
              "reactionIndex": 4,
              "characterIndex": 2,
              "ilustrationIndex": 1
            },
            {
              "line": "Nah, dengan pemahaman itu, coba sekarang kamu susun lagi tipe data yang benar untuk soal tadi.",
              "reactionIndex": 0,
              "characterIndex": 2
            }
          ],
          "next": "soal1_1",
          "nextType": "soal"
        },
        {
          "id": "materi1_2",
          "dialogs": [
            {
              "line": "Wah jawabannya bener! Kamu udah mulai paham banget soal tipe data. Kacau, cepet banget pahamnya! Jadi, kalau ada program yang butuh nyimpen angka, tinggal pilih aja tipe datanya.",
              "reactionIndex": 2,
              "characterIndex": 2
            },
            {
              "line": "Wih mantep dah, udah siap banget buat nerima soal dari Pak Rongga nih.",
              "reactionIndex": 2,
              "characterIndex": 1
            },
            {
              "line": "Nah sekarang kita lanjut ke variabel! Kalau kamu udah paham tipe data, variabel itu sebenarnya gampang banget. Variabel adalah tempat buat nyimpen data. Jadi bayangin aja kamu punya wadah atau kotak yang bisa berubah isinya.",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Oh jadi variabel itu kayak kotak buat nyimpen data gitu? Tapi apa bedanya sama tipe data?",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Iya bener banget! Tipe data itu ngejelasin jenis datanya, misalnya angka, teks, atau logika.",
              "reactionIndex": 2,
              "characterIndex": 2
            },
            {
              "line": "Nah variabel itu nama dari kotaknya. Jadi misalnya, kamu pengen nyimpen umur seseorang, kamu bikin variabel namanya umur, dan tipe datanya int karena umur itu angka bulat.",
              "reactionIndex": 2,
              "characterIndex": 2
            },
            {
              "line": "Ohhhh pahammm!",
              "reactionIndex": 2,
              "characterIndex": 1
            },
            {
              "line": "Ah paham-paham mulu, coba kamu jawab soal ini kalo emang paham.",
              "reactionIndex": 0,
              "characterIndex": 2
            }
          ],
          "next": "soal1_2",
          "nextType": "soal"
        },
        {
          "id": "salah1_2",
          "dialogs": [
            {
              "line": "Aduh aku kena virus kesalahan berpikir nih",
              "reactionIndex": 1,
              "characterIndex": 1
            },
            {
              "line": "Wahahahaha, gapapa kita kerjain bareng-bareng",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Aduhh kacauu sih",
              "reactionIndex": 1,
              "characterIndex": 1
            },
            {
              "line": "Aku jelasin ulang yaa, jadi, int itu biasanya dipakai buat angka bulat, kayak 10, 25, atau 100. Tapi kalau berat badan itu ada desimalnya, kayak 55.5, kira-kira cocok nggak kalau pakai tipe data buat angka bulat?",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Hmm... kurang cocok sih",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Yap. Karena 55.5 itu ada koma-nya, harus cari tipe data yang bisa nampung angka pecahan.",
              "reactionIndex": 2,
              "characterIndex": 2
            },
            {
              "line": "Kalau bool itu gimana ya, aku lupa peraturannya",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Bool itu tipe data yang isinya cuma dua kemungkinan: true atau false. Biasanya dipakai buat nyimpen status, bukan angka. Nah berat badan itu berupa angka, kan? Bukan status lulus atau tidak.",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Ohh aku paham sekarang",
              "reactionIndex": 2,
              "characterIndex": 1
            },
            {
              "line": "Nah coba cek lagi pilihan lain yang lebih cocok.",
              "reactionIndex": 0,
              "characterIndex": 2
            }
          ],
          "next": "soal1_2",
          "nextType": "soal"
        },
        {
          "id": "materi1_3",
          "dialogs": [
            {
              "line": "Beh Adrian mulai jago nih, takut banget kena bantai konsep pemrogaman deh",
              "reactionIndex": 2,
              "characterIndex": 2
            },
            {
              "line": "Kalau berat badan berarti pake float ya mas, kayak float beratBadan = 55.5; gitu kan?",
              "reactionIndex": 2,
              "characterIndex": 1
            },
            {
              "line": "Wah bener banget, kamu udah mulai paham nih! Nah sekarang bayangin ya, kamu udah punya data berat badan itu.",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Terus kamu mau ngolah datanya, misal mau nambahin 5 kilo, atau mau bagi dua buat simulasi diet. Buat ngelakuin perubahan kayak gitu, kamu butuh yang namanya operator.",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Ohhh... operator tuh kayak alat buat ngubah data gitu ya mas?",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Operator itu alat buat ngelakuin operasi kayak tambah, kurang, kali, dan bagi. Misal, mau nambahin umur 5 tahun, tinggal pakai \"+\": int hasil = umur + 5;. Kalau ngurangin pakai \"-\", perkalian pakai \"*\", dan pembagian pakai \"/\".",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Operator ini penting banget buat semua operasi dasar di program.",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Oalaaah, jadi kayak alat buat ngatur angka-angka gitu ya mas! Pantesan semua contoh kodingan pasti ada operatornya.",
              "reactionIndex": 2,
              "characterIndex": 1
            },
            {
              "line": "Iya, bener banget. Semua operasi matematika dasar pake operator itu. Dan, operator ini penting banget, karena tanpa operator, program kamu gak bisa ngelakuin perhitungan atau manipulasi data dengan bener.",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Oh ya, buat ngambil input dari user atau nampilin hasil ke layar, kamu bisa pake operasi input output.",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Misalnya, pake \"scanf\" buat ambil input, kayak \"scanf('%d', &umur);\" untuk nyimpen umur yang dimasukin. Terus, kamu bisa pake \"printf\" buat nampilinnya, kayak \"printf('Umur: %d', umur);\"",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Oh, jadi operator ini penting banget buat ngelakuin berbagai perhitungan, dan input output itu fungsinya buat ngambil input sama nampilin outputnya ke layar ya?",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Iya banget! Operator itu bikin program bisa fleksibel dan ngelakuin tugas yang kamu inginkan.",
              "reactionIndex": 2,
              "characterIndex": 2
            },
            {
              "line": "Selain itu, ada operator \"!=\" yang artinya tidak sama dengan. Terus, ada juga operator logika kayak \"&&\" yang artinya \"AND\", dan \"||\" yang artinya \"OR\" itu buat ngecek kondisi lebih dari satu. Paham kan?",
              "reactionIndex": 2,
              "characterIndex": 2
            },
            {
              "line": "Paham! aku mulai ngerti. Variabel buat nyimpen data, operator buat ngitung, bandingin, dan ngelakuin logika, terus input output buat ngambil input dan nampilin output.",
              "reactionIndex": 2,
              "characterIndex": 1
            },
            {
              "line": "Nah, buat uji pemahaman kamu, aku kasih soal sederhana, kamu coba jawab deh!",
              "reactionIndex": 0,
              "characterIndex": 2
            }
          ],
          "next": "dd-1.1",
          "nextType": "dragAndDrop"
        },
        {
          "id": "salah1_3",
          "dialogs": [
            {
              "line": "Yaelah jawabanku salah",
              "reactionIndex": 1,
              "characterIndex": 1
            },
            {
              "line": "Oke, sebentar yaa. Jadi gini, di soal tadi ada operasi a += 3 * 2. Kita harus inget kalau di C itu ada aturan prioritas operator. Perkalian (*) dikerjain dulu sebelum penjumlahan (+). Jadi bukan langsung dijumlah dari kiri ke kanan ya.",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Setelah hasil perkaliannya ketemu, baru deh ditambah ke a yang awalnya 5. Ini penting supaya nggak salah hitung. Coba kamu cek lagi deh pelan-pelan, mana yang dikerjain dulu.",
              "reactionIndex": 0,
              "characterIndex": 2
            }
          ],
          "next": "soal1_3",
          "nextType": "soal"
        },
        {
          "id": "benar1_last",
          "dialogs": [
            {
              "line": "Nahh, iya itu udah benar! Gampang kan? Kamu mulai paham sekarang, ya? Nih aku kasih summary tentang tipe data, variabel dan operator. kamu bisa baca rangkumannya untuk memerdalam pengetahuan kamu soal ini.",
              "reactionIndex": 2,
              "characterIndex": 2
            },
            {
              "line": "Siap mas! Makasih, mas!",
              "reactionIndex": 2,
              "characterIndex": 1
            }
          ],
          "next": null,
          "nextType": ""
        }
      ],
      "questions": [
        {
          "id": "soal1_1",
          "text": "Bedasarkan data di bawah ini, manakah tipe data yang paling tepat untuk masing-masing data tersebut secara berurutan?",
          "code": "* Nama: \"Andi\"\n* Usia: 20\n* Berat badan: 70.5\n* Nilai ujian: 85\n* Status lulus: true",
          "choices": [
            {
              "text": "string - float - int - bool - char",
              "next": "salah1_1",
              "nextType": "dialog",
              "isCorrect": false
            },
            {
              "text": "string - int - float - int - bool",
              "next": "materi1_2",
              "nextType": "dialog",
              "isCorrect": true
            },
            {
              "text": "char - bool - string - float - int",
              "next": "salah1_1",
              "nextType": "dialog",
              "isCorrect": false
            },
            {
              "text": "int - float - string - bool - float",
              "next": "salah1_1",
              "nextType": "dialog",
              "isCorrect": false
            }
          ]
        },
        {
          "id": "soal1_2",
          "text": "Kalau kamu mau buat variabel beratBadan untuk nyimpen data berat 55.5 kilogram, deklarasi yang BENAR adalah...",
          "choices": [
            {
              "text": "int berat.Badan = 55.5;",
              "next": "salah1_2",
              "nextType": "dialog",
              "isCorrect": false
            },
            {
              "text": "float beratBadan = 55.5;",
              "next": "materi1_3",
              "nextType": "dialog",
              "isCorrect": true
            },
            {
              "text": "string beratBadan = 55.5;",
              "next": "salah1_2",
              "nextType": "dialog",
              "isCorrect": false
            },
            {
              "text": "bool beratBadan = \"true\";",
              "next": "salah1_2",
              "nextType": "dialog",
              "isCorrect": false
            }
          ]
        },
        {
          "id": "soal1_3",
          "text": "Berapa output dari code di bawah ini?",
          "code": "#include <stdio.h>\nint main() {\n    int a = 5;\n    a += 3 * 2;\n    printf(\"%d\\n\", a);\n    return 0;\n}",
          "choices": [
            {
              "text": "16",
              "next": "salah1_3",
              "nextType": "dialog",
              "isCorrect": false
            },
            {
              "text": "11",
              "next": "benar1_last",
              "nextType": "dialog",
              "isCorrect": true
            },
            {
              "text": "13",
              "next": "salah1_3",
              "nextType": "dialog",
              "isCorrect": false
            },
            {
              "text": "10",
              "next": "salah1_3",
              "nextType": "dialog",
              "isCorrect": false
            }
          ]
        }
      ],
      "dragAndDrop": [
        {
          "id": "dd-1.1",
          "type": "dnd_code",
          "instruction": "Seret dan susun potongan kode berikut agar membentuk deklarasi variabel bertipe int dan langsung diberi nilai 5",
          "scaffoldCode": "int main() {\n\t[dz1][dz2],[dz3]\n\t[dz4][dz5]=[dz6][dz7]\n\t[dz8]\n}",
          "draggableOptions": [
            {
              "id": "dnd-1",
              "content": {
                "type": "text",
                "value": "a = 7"
              }
            },
            {
              "id": "dnd-2",
              "content": {
                "type": "text",
                "value": "int"
              }
            },
            {
              "id": "dnd-3",
              "content": {
                "type": "text",
                "value": "hasil"
              }
            },
            {
              "id": "dnd-4",
              "content": {
                "type": "text",
                "value": "b = 2;"
              }
            },
            {
              "id": "dnd-5",
              "content": {
                "type": "text",
                "value": "float"
              }
            },
            {
              "id": "dnd-6",
              "content": {
                "type": "text",
                "value": "printf(\"Hasil: %.1f\",hasil);"
              },
              "info": "%.[jumlah_angka]f adalah Format Specifier / Penentu Format, sebuah 'kode perintah' di dalam printf yang mengatur bagaimana sebuah nilai akan ditampilkan. \nSecara default, mencetak angka desimal (float) bisa menghasilkan banyak angka di belakang koma (misal: 2.333333). Dengan penentu format, kita bisa memerintahkan bahasa pemrograman untuk membulatkan dan menampilkannya lebih rapi. \n\nContoh:\nJika nilai adalah 98.765, maka:\n%f akan mencetak 98.765000 (default, kurang rapi). \n%.1f akan mencetak 98.8 (dibulatkan ke 1 angka desimal). \n%.2f akan mencetak 98.77 (dibulatkan ke 2 angka desimal)."
            },
            {
              "id": "dnd-7",
              "content": {
                "type": "text",
                "value": "(float)"
              },
              "info": "ini adalah Type Casting, yaitu instruksi eksplisit dari programmer kepada compiler untuk mengubah tipe data dari sebuah nilai atau variabel menjadi tipe data lain.\ntanpa type casting, pembagian seperti  7/3 akan dianggap sebagai pembagian dua bilangan bulat (integer), yang hasilnya juga integer, yaitu 2. Sisa desimalnya (0.333...) akan dibuang. \n\nsintaks general: (tipe_data_tujuan) nilai_atau_variabel;"
            },
            {
              "id": "dnd-8",
              "content": {
                "type": "text",
                "value": "a / b;"
              }
            }
          ],
          "dropZones": [
            {
              "id": "dz1",
              "acceptedIds": null,
              "content": null
            },
            {
              "id": "dz2",
              "acceptedIds": null,
              "content": null
            },
            {
              "id": "dz3",
              "acceptedIds": null,
              "content": null
            },
            {
              "id": "dz4",
              "acceptedIds": null,
              "content": null
            },
            {
              "id": "dz5",
              "acceptedIds": null,
              "content": null
            },
            {
              "id": "dz6",
              "acceptedIds": null,
              "content": null
            },
            {
              "id": "dz7",
              "acceptedIds": null,
              "content": null
            },
            {
              "id": "dz8",
              "acceptedIds": null,
              "content": null
            }
          ],
          "correctSequence": [
            "dnd-2", "dnd-1", "dnd-4", "dnd-5", "dnd-3", "dnd-7", "dnd-8", "dnd-6"
          ],
          "next": "soal1_3",
          "nextType": "soal"
        }
      ],
      "summary": [
        "Tipe Data: Tipe data menentukan jenis nilai yang bisa disimpan dalam variabel, seperti int untuk angka bulat, float untuk angka pecahan, dan char untuk karakter.",
        "Variabel: Variabel adalah tempat menyimpan data yang nilainya bisa berubah selama program berjalan. Contohnya, int umur = 21; menyimpan nilai umur.",
        "Operator: Operator digunakan untuk melakukan operasi pada data, seperti:\nAritmatika: +, -, *, / untuk perhitungan.\nPembanding: ==, !=, >, < untuk membandingkan nilai.\nLogika: && (AND), || (OR) untuk menggabungkan kondisi.\nPenugasan: = untuk memberi nilai, +=, -= untuk operasi dan penugasan bersamaan.",
        "I/O (Input/Output): Gunakan scanf untuk input data dari pengguna dan printf untuk menampilkan hasil ke layar."
      ]
    },
    {
      "level": 2,
      "description": "Mau program kamu bisa milih jalan? Pakai if, else if, atau switch biar dia nggak nyasar!",
      "title": "If, else if, switch",
      "background": "mc-rumah",
      "character1": "Adrian",
      "character1Images": [
        "adriancafe_biasa",
        "adriancafe_marah",
        "adriancafe_senang",
        "adriancafe_kecewa",
        "adriancafe_aksi"
      ],
      "character2": "Kakak",
      "character2Images": [
        "tino_biasa",
        "tino_marah",
        "tino_senang",
        "tino_kecewa",
        "tino_aksi"
      ],
      "ilustrations": ["contoh-ilustrasi1", "IF-ELSE", "SWITCH"],
      "start": "preDialog2_1",
      "typeStart": "preDialog",
      "preDialog": [
        {
          "id": "preDialog2_1",
          "text": "Adrian memiliki seorang kakak bernama Tino seorang lulusan IT yang kini bekerja di bidang teknologi. Tino dikenal sebagai pribadi yang blak-blakan dan kerap meremehkan kemampuan adiknya. Ia sering menyindir Adrian karena belum memahami hal-hal dasar dalam pemrograman.",
          "next": "preDialog2_2",
          "nextType": "preDialog"
        },
        {
          "id": "preDialog2_2",
          "text": "Namun di balik kata-kata sinisnya, Tino sebenarnya adalah sosok kakak yang peduli. Ia diam-diam memperhatikan perkembangan Adrian, bahkan kadang membantu tanpa mengakui secara langsung.",
          "next": "preDialog2_3",
          "nextType": "preDialog"
        },
        {
          "id": "preDialog2_3",
          "text": "Di kamar Adrian, lampu meja menyala redup. Laptopnya terbuka dengan kode program pengecek nilai yang penuh error. Adrian duduk sambil mengetik, berulang kali mengetik dan mencoba memperbaiki kode itu.",
          "next": "intro2",
          "nextType": "dialog"
        }
      ],
      "dialogs": [
        {
          "id": "intro2",
          "dialogs": [
            {
              "line": "Aduh, kenapa sih program pengecek nilainya error terus? Padahal aku sudah nulis kode ini berkali-kali...",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Hmm... dari jauh aku sudah lihat kayaknya kamu belum paham betul cara pakai if, else-if, dan switch, nih.",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Aku udah coba, Kak. Tapi makin dilihat, makin rumit. Rasanya makin gak ngerti...",
              "reactionIndex": 1,
              "characterIndex": 1
            },
            {
              "line": "Haha, masa baru materi dasar aja udah kewalahan? Gimana nanti menghadapi materi setelah ini.",
              "reactionIndex": 0,
              "characterIndex": 2
            }
          ],
          "choices": [
            {
              "text": "Kakak tahu, kan? Bisa tolong jelasin yang gampang aja? Aku udah capek banget nih...",
              "next": "scene2_1",
              "nextType": "dialog"
            },
            {
              "text": "Iya deh, tapi jangan cuma nyindir terus, aku juga belajar kok.",
              "next": "scene2_2",
              "nextType": "dialog"
            },
            {
              "text": "Ah, kamu cuma nyindir aja, gak usah sok pintar, aku bisa cari sendiri kalau mau.",
              "next": "scene2_3",
              "nextType": "dialog"
            }
          ],
          "next": null,
          "nextType": null
        },
        {
          "id": "scene2_1",
          "dialogs": [
            {
              "line": "Kakak tahu, kan? Bisa tolong jelasin yang gampang aja? Aku udah capek banget nih...",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Santai, bro. Aku juga dulu pernah stuck berhari-hari sebelum ngerti.",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Iya, makanya aku minta tolong. Aku bener-bener bingung nih.",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Oke, aku jelasin gampangnya",
              "reactionIndex": 0,
              "characterIndex": 2
            }
          ],
          "next": "materi2_1",
          "nextType": "dialog"
        },
        {
          "id": "scene2_2",
          "dialogs": [
            {
              "line": "Iya deh, tapi jangan cuma nyindir terus, aku juga belajar kok.",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Santai aja, gak usah baper. Aku juga pernah kayak kamu, malah sering lebih parah.",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Hehe, ya maklum lah, baru belajar. Kadang rasanya pengen nyerah aja",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Nah, makanya aku di sini buat bantu. Yuk, kita lihat bareng-bareng bagian mana yang bikin kamu bingung.",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Aku bingung, Kak. Dari nulis if, urutan else-if, sampai kapan pakai switch, semua campur aduk.",
              "reactionIndex": 0,
              "characterIndex": 1
            }
          ],
          "next": "materi2_1",
          "nextType": "dialog"
        },
        {
          "id": "scene2_3",
          "dialogs": [
            {
              "line": "Ah, kamu cuma nyindir aja, gak usah sok pintar, aku bisa cari sendiri kalau mau.",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Heh, gak usah marah gitu dong. Aku cuma pengen bantu.",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Halah pasti nanti ada nyindir-nyindirnya",
              "reactionIndex": 1,
              "characterIndex": 1
            },
            {
              "line": "Engga kok enggak, kamu mau dibantuin ga?",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Mau kak hehe, jelasin yang gampang dong kak",
              "reactionIndex": 0,
              "characterIndex": 1
            }
          ],
          "next": "materi2_1",
          "nextType": "dialog"
        },
        {
          "id": "materi2_1",
          "dialogs": [
            {
              "line": "Oke, aku jelasin gampangnya. Bayangin if-else itu kayak milih jalan di persimpangan ini.",
              "reactionIndex": 4,
              "characterIndex": 2,
              "ilustrationIndex": 1
            },
            {
              "line": "Lihat kan, ada jalan ke 'PANTAI' atau 'TEMPAT LAIN'? Komputer itu kayak nanya, 'Tujuanmu PANTAI?'. Kalau iya (true), ya lewat jalan PANTAI itu kayak if. Kalau bukan, ya lewat TEMPAT LAIN itu else-nya. Simpel kan?",
              "reactionIndex": 4,
              "characterIndex": 2,
              "ilustrationIndex": 1
            },
            {
              "line": "Oke, itu kalau pilihannya cuma dua, Kak. Terus kalau ada lebih dari satu pilihan gimana? Kayak di simpang empat gitu?",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Nah, kalau pilihannya banyak dan jelas kayak di persimpangan ini, kita bisa pakai yang namanya 'switch'. Coba lihat ilustrasinya.",
              "reactionIndex": 0,
              "characterIndex": 2,
              "ilustrationIndex": 2
            },
            {
              "line": "Dengan 'switch', komputer itu kayak GPS super cepat. Kamu sebut tujuannya, misalnya 'PANTAI', dia langsung arahin ke jalan yang benar tanpa ngecek satu-satu.",
              "reactionIndex": 4,
              "characterIndex": 2,
              "ilustrationIndex": 2
            },
            {
              "line": "Jadi ada case 'PEGUNUNGAN', case 'PANTAI', case 'KOTA'. Kalau tujuanmu gak ada di daftar, dia arahin ke 'LAINNYA' (default). Lebih rapi dan cepat untuk pilihan yang udah pasti!",
              "reactionIndex": 2,
              "characterIndex": 2,
              "ilustrationIndex": 2
            },
            {
              "line": "Oh, jadi 'switch' itu buat banyak pilihan yang spesifik ya? Terus kalau 'else-if' yang Kakak sebut di awal itu gimana bedanya?",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Nah, kalau 'else-if' itu kita pakai kalau kondisinya berantai dan bisa lebih beragam, gak cuma ngecek satu nilai pasti. Misalnya, ngecek rentang nilai atau beberapa kondisi berbeda yang saling terkait. Tapi untuk pilihan tujuan yang namanya sudah jelas dan pilihannya banyak, 'switch' lebih pas. Paham bedanya?",
              "reactionIndex": 4,
              "characterIndex": 2
            },
            {
              "line": "Hmm, lumayan kebayang sih, Kak. Jadi 'if-else' buat satu atau dua kondisi, 'switch' buat banyak pilihan yang nilainya pasti, dan 'else-if' buat kondisi berantai yang lebih kompleks.",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Sip! Coba sekarang jawab soal ini, ini tentang kondisi yang paling sederhana dulu.",
              "reactionIndex": 4,
              "characterIndex": 2
            }
          ],
          "next": "soal2_1",
          "nextType": "soal"
        },
        {
          "id": "salah2_1",
          "dialogs": [
            {
              "line": "Aduh salah lagi! Coba pikir lagi, soal tadi kan cuma minta cek satu kondisi: 'suhu lebih dari 30 derajat atau nggak'. Jadi sebenarnya kita cukup pakai satu pengecekan aja tanpa harus pilih-pilih ke kemungkinan lain.",
              "reactionIndex": 1,
              "characterIndex": 2
            },
            {
              "line": "Ohh, jadi maksudnya nggak perlu ada opsi lain ya, cukup cek doang?",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Yap, benar banget! Kalau kondisi itu terpenuhi, baru kita lakuin sesuatu. Kalau nggak, ya udah, program diem aja. Jadi intinya: kalau cuma mau ngecek satu hal, satu syarat, kita cukup pakai satu kondisi sederhana.",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Oooh, paham sekarang! Aku coba pikir lagi deh!",
              "reactionIndex": 0,
              "characterIndex": 1
            }
          ],
          "next": "soal2_1",
          "nextType": "soal"
        },
        {
          "id": "materi2_2",
          "dialogs": [
            {
              "line": "wih mantap bener tuh, ok sekarang kita lanjut ke materi else if",
              "reactionIndex": 2,
              "characterIndex": 2
            },
            {
              "line": "nah else if tuh kalau kamu punya lebih dari satu kondisi yang harus dicek. Misalnya, kamu lagi ngecek usia seseorang, apakah dia remaja, dewasa, atau lanjut usia.",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Kalau remaja, akan ada aksi tertentu, kalau dewasa, aksi yang berbeda, dan kalau lanjut usia, aksi yang lain lagi. contohnya kayak code ini sama sekalian deh kamu tebak outputnya",
              "reactionIndex": 0,
              "characterIndex": 2
            }
          ],
          "next": "soal2_2",
          "nextType": "soal"
        },
        {
          "id": "salah2_2",
          "dialogs": [
            {
              "line": "Aduh Kak, aku salah lagi jawabnya...",
              "reactionIndex": 1,
              "characterIndex": 1
            },
            {
              "line": "Gapapa Dek, yang penting ngerti kenapa salah ya! Nih aku bantu jelasin dikit.",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Siap Kak!",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Di soal tadi, keliatan kan ada kombinasi tanda >=, <=, dan &&. Nah, && itu artinya dan, jadi dua syarat harus benar semua.",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Ooh berarti nggak cukup satu syarat aja ya?",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Yap, bener! Jadi kalau mau masuk ke kondisi printf(\"Kamu dewasa\"), umur harus lebih dari atau sama dengan 18 dan kurang dari atau sama dengan 60. Dua-duanya harus terpenuhi.",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Kalau cuma satu syarat doang yang bener, berarti lompat ke else ya?",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Betul! Kalau dua-duanya nggak pas juga, dia baru masuk ke blok else. Makanya penting banget liat operator kayak &&, ||, dan tanda-tanda perbandingan >, <, >=, <= itu beneran dipahami.",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Wah iya iya Kak! Aku kadang suka kelewat liat operatornya.",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Hehehe santai, makin sering latihan makin peka kok. Yuk lanjut biar makin jago!",
              "reactionIndex": 2,
              "characterIndex": 2
            }
          ],
          "next": "soal2_2",
          "nextType": "soal"
        },
        {
          "id": "materi2_3",
          "dialogs": [
            {
              "line": "beh mantep, lanjut nih materi terakhir, switch",
              "reactionIndex": 2,
              "characterIndex": 2
            },
            {
              "line": "Nah iya! Lah terus switch buat apa dong?",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Switch itu mirip kayak else-if, tapi lebih rapi kalau pilihan kamu sudah pasti dan terbatas, kayak pegunungan, pantai, atau kota. Jadi switch langsung cocokkan pilihanmu, dan kasih arahan sesuai case-nya.",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Wah jadi kalau cuma satu kondisi pakai if, kalau banyak kondisi pakai else-if, terus kalau banyak pilihan pasti bisa pake switch, gitu?",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Yeah exactly, sekarang coba kamu jawab soal ini, ya.",
              "reactionIndex": 0,
              "characterIndex": 2
            }
          ],
          "next": "soal2_3",
          "nextType": "soal"
        },
        {
          "id": "salah2_3",
          "dialogs": [
            {
              "line": "Eits, switch-case itu cocok buat banyak pilihan tetap, bukan buat kondisi yang fleksibel banget. Tadi jawabannya kayak masih salah kaprah nih.",
              "reactionIndex": 1,
              "characterIndex": 2
            },
            {
              "line": "Ooooh gitu! Aku kira switch itu kayak if-else, bisa buat cek suhu lebih besar atau lebih kecil.",
              "reactionIndex": 3,
              "characterIndex": 1
            },
            {
              "line": "Nah itu dia bedanya, kalau mau cek kondisi fleksibel kayak lebih besar atau lebih kecil, itu baru pakai if. Kalau switch-case, harus nilai pastinya yang dibandingin. Misal, suhu == 30, suhu == 40, gitu.",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Aaaah paham sekarang. Jadi switch tuh kayak ngecek daftar pilihan yang pasti-pasti aja ya?",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Betul! Kalau yang sifatnya perbandingan atau kondisi kompleks, mending tetap pakai if-else.",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Woke siap Kak, abis ini aku baca ulang deh biar makin mantap!",
              "reactionIndex": 2,
              "characterIndex": 1
            },
            {
              "line": "Semangat terus ya! Sedikit lagi ilmunya makin nancep nih!",
              "reactionIndex": 2,
              "characterIndex": 2
            }
          ],
          "next": "soal2_3",
          "nextType": "soal"
        },
        {
          "id": "benar2_last",
          "dialogs": [
            {
              "line": "pinter banget kamu. sekarang udah ngerti kan cara kerja if, else if, dan switch, jadi gampang nanti kalau kamu ngadepin materi kondisi dalam program.",
              "reactionIndex": 2,
              "characterIndex": 2
            },
            {
              "line": "Asik, semoga saat aku ketemu materi kondisi dalam konsep pemrogarman ga bakal bingung lagi ya. Makasih banyak, Kak!",
              "reactionIndex": 2,
              "characterIndex": 1
            },
            {
              "line": "Iya, siap! Nanti kamu bakal sering ketemu ini di soal-soal. Kalau ada yang bingung lagi, langsung tanya aja!",
              "reactionIndex": 2,
              "characterIndex": 2
            },
            {
              "line": "Siap kak! Aku mau lanjut belajar materi selanjutnya, for while dan do while. Besok siang aku sama raka mau ke kafe buat diskusi materi for, while, dan do while, ngerjain tugas bareng juga",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Oke deh! Semangat terus ya konsep pemrogamannya",
              "reactionIndex": 2,
              "characterIndex": 2
            }
          ],
          "next": null,
          "nextType": ""
        }
      ],
      "questions": [
        {
          "id": "soal2_1",
          "text": "Terdapat program buat cek apakah suhu ruangan lebih dari 30°C. Kalau iya, tampilkan \"Ruangan Panas\". Kalau enggak, program gak perlu ngapa-ngapain. Kira-kira struktur kondisi apa yang paling tepat buat program ini?",
          "choices": [
            {
              "text": "if, karena cuma perlu ngecek satu kondisi aja.",
              "next": "materi2_2",
              "nextType": "dialog",
              "isCorrect": true
            },
            {
              "text": "else, karena cuma butuh dua kemungkinan.",
              "next": "salah2_1",
              "nextType": "dialog",
              "isCorrect": false
            },
            {
              "text": "if dan else, karena ada dua kondisi yang harus dipilih.",
              "next": "salah2_1",
              "nextType": "dialog",
              "isCorrect": false
            },
            {
              "text": "Tidak perlu kondisi, cukup tampilkan saja.",
              "next": "salah2_1",
              "nextType": "dialog",
              "isCorrect": false
            }
          ]
        },
        {
          "id": "soal2_2",
          "text": "apa output dari code di bawah ini?",
          "code": "int umur = 25;\nif (umur < 18) {\nprintf(\"Kamu masih remaja\");\n} else if (umur >= 18 && umur <= 60) {\n    printf(\"Kamu dewasa\");\n} else {\n    printf(\"Kamu lanjut usia\");\n}",
          "choices": [
            {
              "text": "Kamu masih remaja",
              "next": "salah2_2",
              "nextType": "dialog",
              "isCorrect": false
            },
            {
              "text": "Kamu dewasa",
              "next": "materi2_3",
              "nextType": "dialog",
              "isCorrect": true
            },
            {
              "text": "Kamu lanjut usia",
              "next": "salah2_2",
              "nextType": "dialog",
              "isCorrect": false
            },
            {
              "text": "Tidak ada output",
              "next": "salah2_1",
              "nextType": "dialog",
              "isCorrect": false
            }
          ]
        },
        {
          "id": "soal2_3",
          "text": "Adrian memilih sebuah menu berdasarkan angka yang diberikan. Kira-kira menu apa yang akan muncul di layar?",
          "code": "int pilihanMenu = 2;\nswitch (pilihanMenu) {\n    case 1:\n        printf(\"Pilihan menu: Nasi Goreng\");\n        break;\n    case 2:\n        printf(\"Pilihan menu: Mie Ayam\");\n        break;\n    case 3:\n        printf(\"Pilihan menu: Soto\");\n        break;\n    default:\n        printf(\"Pilihan menu tidak valid\");\n}",
          "choices": [
            {
              "text": "Pilihan menu: Nasi Goreng",
              "next": "salah2_3",
              "nextType": "dialog",
              "isCorrect": false
            },
            {
              "text": "Pilihan menu: Soto",
              "next": "salah2_3",
              "nextType": "dialog",
              "isCorrect": false
            },
            {
              "text": "Pilihan menu: Mie Ayam",
              "next": "benar2_last",
              "nextType": "dialog",
              "isCorrect": true
            },
            {
              "text": "Pilihan menu tidak valid",
              "next": "salah2_3",
              "nextType": "dialog",
              "isCorrect": false
            }
          ]
        }
      ],
      "summary": [
        "if untuk memeriksa satu kondisi. Jika kondisi tersebut benar, maka aksi atau kode yang ada di dalam blok if akan dijalankan.",
        "else if digunakan ketika ada lebih dari satu kondisi yang perlu diperiksa. Jika kondisi pertama salah, maka kondisi berikutnya akan dicek. Hal ini memungkinkan pengecekan beberapa kondisi dalam urutan yang terstruktur.",
        "switch digunakan ketika ada banyak pilihan atau kondisi yang mirip. Dengan switch, kamu bisa memeriksa nilai dari suatu variabel terhadap beberapa kemungkinan nilai dan menjalankan aksi berdasarkan nilai yang cocok."
      ]
    },
    {
      "level": 3,
      "description": "Looping time! Biar program kamu bisa ngulang-ngulang kerjaan tanpa capek",
      "title": "For, While, Do While",
      "background": "teman-cafe",
      "character1": "Adrian",
      "character1Images": [
        "adriankampus_biasa",
        "adriankampus_marah",
        "adriankampus_senang",
        "adriankampus_kecewa",
        "adriankampus_aksi"
      ],
      "character2": "Rusdi",
      "character2Images": [
        "rusdi_biasa",
        "rusdi_marah",
        "rusdi_senang",
        "rusdi_kecewa",
        "rusdi_aksi"
      ],
      "ilustrations": [
        "LOOP-FOR-ISI",
        "LOOP-WHILE-KERING",
        "LOOP-WHILE-BASAH",
        "DO-WHILE-1",
        "DO-WHILE-2",
        "DO-WHILE-3"
      ],
      "start": "preDialog3_1",
      "typeStart": "preDialog",
      "preDialog": [
        {
          "id": "preDialog3_1",
          "text": "Adrian sering jajan di warung milik Mas Rusdi, pria ramah yang sudah mengenalnya sejak awal kuliah. Ternyata, Rusdi adalah lulusan teknik juga. Namun, nasib membawanya membuka warung karena sulitnya mencari kerja di dunia IT.",
          "next": "preDialog3_2",
          "nextType": "preDialog"
        },
        {
          "id": "preDialog3_2",
          "text": "Persaingan yang ketat dan minimnya relasi membuat Rusdi tak lolos seleksi kerja berulang kali. Suatu hari, saat Adrian mengeluh soal konsep perulangan, Rusdi menjelaskan lewat kisah hidupnya sendiri tentang usaha yang terus diulang meski hasilnya belum selalu sesuai harapan.",
          "next": "intro3",
          "nextType": "dialog"
        }
      ],
      "dialogs": [
        {
          "id": "intro3",
          "dialogs": [
            {
              "line": "Aduh… codingnya bener-bener bikin otak ngebul",
              "reactionIndex": 1,
              "characterIndex": 1
            },
            {
              "line": "Halo mas, mau pesen apa hari ini?",
              "reactionIndex": 3,
              "characterIndex": 2
            },
            {
              "line": "Mi ayam biasa, Mas. Kuahnya yang banyak ya",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Siap Mas. Masnya keliatan lelah banget. Lagi ngerjain apa mas?",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Ini Pak, tugas coding. Bikin kepala muter terus",
              "reactionIndex": 3,
              "characterIndex": 1
            },
            {
              "line": "Dulu saya kuliah IT juga lho, Mas. Tapi ya gitu… sekarang muter-muter di dapur tiap hari. Kadang saya mikir,  jangan-jangan hidup saya ini udah kayak program yang kejebak di loop. Gak kelar-kelar",
              "reactionIndex": 0,
              "characterIndex": 2
            }
          ],
          "choices": [
            {
              "text": "Eh... loop itu maksudnya apa sih, Mas? Saya lagi belajar itu juga, tapi malah makin pusing",
              "next": "scene3_1",
              "nextType": "dialog"
            },
            {
              "text": "Wah, saya juga kayaknya lagi kejebak loop deh. Tugas gak kelar-kelar, Mas",
              "next": "scene3_2",
              "nextType": "dialog"
            },
            {
              "text": "Wkwk masi mending tu mas daripada saya muter-muter terus kaya siklus mahasiswa gatau arah, coding, mie ayam, tidur, coding lagi, mie ayam lagi, tidur lagi",
              "next": "scene3_3",
              "nextType": "dialog"
            }
          ],
          "next": null,
          "nextType": null
        },
        {
          "id": "scene3_1",
          "dialogs": [
            {
              "line": "Eh... loop itu maksudnya apa sih, Mas? Saya lagi belajar itu juga, tapi malah makin pusing",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Loop itu mirip perulangan, Mas. Jadi kayak komputer ngelakuin hal yang sama berulang-ulang… sampai syarat tertentu terpenuhi",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Mas Rusdi nih kayanya jago, bisa tolong jelasin soal Loop ini ga mas?",
              "reactionIndex": 2,
              "characterIndex": 1
            }
          ],
          "next": "materi3_1",
          "nextType": "dialog"
        },
        {
          "id": "scene3_2",
          "dialogs": [
            {
              "line": "Wah, saya juga kayaknya lagi kejebak loop deh. Tugas gak kelar-kelar, Mas",
              "reactionIndex": 2,
              "characterIndex": 1
            },
            {
              "line": "Lho, sama dong kayak saya. Bedanya, loop saya isinya ngaduk kuah sama motong ayam tiap hari",
              "reactionIndex": 2,
              "characterIndex": 2
            },
            {
              "line": "“Iya juga ya, Pak. Hidup kita bisa dibilang program yang jalan terus",
              "reactionIndex": 4,
              "characterIndex": 1
            },
            {
              "line": "Itu namanya loop kehidupan mas",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Eh, ngomong-ngomong soal loop… Mas nya tadi sempat nyebut. Loop itu maksudnya apa sih? Tadi dosen saya jelasin, tapi malah bikin kepala tambah muter",
              "reactionIndex": 4,
              "characterIndex": 1
            }
          ],
          "next": "materi3_1",
          "nextType": "dialog"
        },
        {
          "id": "scene3_3",
          "dialogs": [
            {
              "line": "Wkwk masi mending tu mas daripada saya muter-muter terus kaya siklus mahasiswa gatau arah, coding, mie ayam, tidur, coding lagi, mie ayam lagi, tidur lagi",
              "reactionIndex": 2,
              "characterIndex": 1
            },
            {
              "line": "Hahaha… mi ayam tuh emang wenak, Mas. Ibarat nemu titik koma pas coding error... beh melegakan banget",
              "reactionIndex": 2,
              "characterIndex": 2
            },
            {
              "line": "Eh iya, ngomongin soal coding… Mas, tadi sempat nyebut soal loop ya? Saya tadi diajarin dosen, tapi kepala saya gak nyangkut apa-apa. Soalnya keburu kepikiran mi ayam, Pak… kacau",
              "reactionIndex": 4,
              "characterIndex": 1
            },
            {
              "line": "Wah, kacau bener. Tapi tenang, loop itu gampang kok. Mau saya jelasin soal Loop?",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Mau banget mas!",
              "reactionIndex": 2,
              "characterIndex": 1
            }
          ],
          "next": "materi3_1",
          "nextType": "dialog"
        },
        {
          "id": "materi3_1",
          "dialogs": [
            {
              "line": "Oke, gini. For loop itu kayak daftar tugas yang jumlahnya sudah jelas. Misalnya, lihat ilustrasi menanam bunga ini.",
              "reactionIndex": 4,
              "characterIndex": 2,
              "ilustrationIndex": 0
            },
            {
              "line": "Ada 5 pot kan? Kita tahu persis harus menanam 5 bunga. Mulai dari pot pertama (1/5), setiap kali tanam, bunga mekar, dan hitungan maju (2/5, 3/5...), sampai semua (5/5) terisi. For loop itu otomatis berhenti setelah jumlah tugasnya selesai.",
              "reactionIndex": 4,
              "characterIndex": 2,
              "ilustrationIndex": 0
            },
            {
              "line": "Oh, jadi for loop itu buat tugas yang jumlahnya sudah pasti dari awal, ya?",
              "reactionIndex": 4,
              "characterIndex": 1
            },
            {
              "line": "Betul! Coba saya kasih soal ya, kalau bener nanti mie ayamnya ini gratis deh",
              "reactionIndex": 2,
              "characterIndex": 2
            },
            {
              "line": "Wih ready Mas kalau gitu!",
              "reactionIndex": 2,
              "characterIndex": 1
            },
            {
              "line": "Ya sudah ini soalnya",
              "reactionIndex": 0,
              "characterIndex": 2
            }
          ],
          "next": "soal3_1",
          "nextType": "soal"
        },
        {
          "id": "salah3_1",
          "dialogs": [
            {
              "line": "Yah salah jawabanku. Kenapa ya for loop yang tadi aku buat gak jalan? Kayaknya ada yang salah deh.",
              "reactionIndex": 3,
              "characterIndex": 1
            },
            {
              "line": "Coba kita cek lagi. Jadi gini, kalau kamu pake i < 10, loopingnya berhenti waktu i udah 10. Artinya angka 10 gak kebaca. Kalau kamu mau sampai angka 10 harus pake i <= 10.",
              "reactionIndex": 4,
              "characterIndex": 2
            },
            {
              "line": "Ah gitu ya. Jadi kalau pake < 10 cuma sampe angka 9?",
              "reactionIndex": 4,
              "characterIndex": 1
            },
            {
              "line": "Iya bener! Makanya biar bisa nyetak 1 sampe 10, kita perlu ngecek i <= 10 supaya kondisi loopingnya jalan terus sampe 10. Kalau pake i < 10, dia berhenti di 9.",
              "reactionIndex": 4,
              "characterIndex": 2
            },
            {
              "line": "Oh jadi masalahnya ada di operator perbandingannya ya? Kalau gitu aku harus hati-hati banget nih biar gak salah lagi.",
              "reactionIndex": 4,
              "characterIndex": 1
            },
            {
              "line": "Betul! Jadi perhatiin syaratnya dengan seksama. Kalau kamu pengen nyetak sampai 10, jangan lupa pake <= 10. Kecil sih, tapi ngaruh besar hasilnya.",
              "reactionIndex": 4,
              "characterIndex": 2
            },
            {
              "line": "Oooh sekarang baru paham. Thanks banget bro jadi ngerti nih!",
              "reactionIndex": 2,
              "characterIndex": 1
            },
            {
              "line": "Sama-sama Mas! Makanya kita harus lebih teliti di setiap bagian kode.",
              "reactionIndex": 2,
              "characterIndex": 2
            }
          ],
          "next": "soal3_1",
          "nextType": "soal"
        },
        {
          "id": "materi3_2",
          "dialogs": [
            {
              "line": "Wah mantap, Bro! Udah paham banget tuh for loop. Sekarang kita lanjut ke 'while loop'. Ini beda lagi.",
              "reactionIndex": 4,
              "characterIndex": 2
            },
            {
              "line": "Coba lihat gambar tanaman layu ini.Tanaman itu kan kering. 'While loop' itu kayak perintah 'selama tanaman masih kering, siram terus!'. Kita gak tahu pasti berapa kali siram, tapi tahu kapan berhenti.",
              "reactionIndex": 4,
              "characterIndex": 2,
              "ilustrationIndex": 1
            },
            {
              "line": "Setiap disiram, meteran kelembaban tanahnya bergerak dari 'Kering' menuju 'Basah'. Nah, lihat gambar berikutnya, tanamannya jadi segar!",
              "reactionIndex": 4,
              "characterIndex": 2,
              "ilustrationIndex": 2
            },
            {
              "line": "Begitu meteran menunjukkan 'Basah' (kondisi kering sudah tidak terpenuhi), 'while loop' otomatis berhenti menyiram. Jadi, dia terus kerja selama syaratnya benar.",
              "reactionIndex": 4,
              "characterIndex": 2,
              "ilustrationIndex": 2
            },
            {
              "line": "Wah, berarti while loop itu tugas yang terus diulang selama kondisi tertentu masih benar, ya?",
              "reactionIndex": 4,
              "characterIndex": 1
            },
            {
              "line": "Sip! Terakhir ada 'do-while loop'. Ini mirip 'while', tapi ada beda penting. Bayangin dispenser air ini.",
              "reactionIndex": 4,
              "characterIndex": 2,
              "ilustrationIndex": 3
            },
            {
              "line": "Bagian 'do'-nya itu kayak air langsung ngalir ke gelas dulu, tanpa banyak tanya. Jadi, tugasnya minimal jalan sekali.",
              "reactionIndex": 4,
              "characterIndex": 2,
              "ilustrationIndex": 3
            },
            {
              "line": "Setelah itu, baru bagian 'while'-nya ngecek kondisi. Lihat, airnya terus ngalir dan meteran level airnya naik kan?",
              "reactionIndex": 4,
              "characterIndex": 2,
              "ilustrationIndex": 4
            },
            {
              "line": "Dia akan terus ngisi 'while' (selama) gelasnya belum penuh. Begitu gelasnya penuh dan meteran menunjukkan 'Full'...",
              "reactionIndex": 4,
              "characterIndex": 2,
              "ilustrationIndex": 5
            },
            {
              "line": "...loop-nya berhenti. Jadi, 'do-while' itu kerjakan dulu sekali, baru cek kondisi untuk ngulang.",
              "reactionIndex": 4,
              "characterIndex": 2
            },
            {
              "line": "Jadi do-while itu selalu jalan minimal sekali dulu baru cek kondisinya, beda sama while yang cek dulu baru jalan?",
              "reactionIndex": 4,
              "characterIndex": 1
            },
            {
              "line": "Iya, dah paham tuh! Jadi intinya for loop buat tugas dengan jumlah pasti, while loop buat tugas yang tergantung kondisi, dan do-while loop itu tugas yang minimal dijalankan sekali sebelum dicek",
              "reactionIndex": 4,
              "characterIndex": 2
            },
            {
              "line": "Wah, makasih Mas! Penjelasannya mantep bener!",
              "reactionIndex": 2,
              "characterIndex": 1
            },
            {
              "line": "Nah kalau udah mantep, coba sekarang kerjain soal while loop ini",
              "reactionIndex": 2,
              "characterIndex": 2
            }
          ],
          "next": "soal3_2",
          "nextType": "soal"
        },
        {
          "id": "salah3_2",
          "dialogs": [
            {
              "line": "Ah salah lagi nih!",
              "reactionIndex": 3,
              "characterIndex": 1
            },
            {
              "line": "Gak apa-apa Mas, kita cek bareng-bareng. Jadi di dalam loop for kamu udah nulis i <= 3, artinya program akan nge-loop sebanyak 3 kali. Setiap kali looping, dia bakal mencetak Hai dan dilanjut ke perulangan berikutnya.",
              "reactionIndex": 4,
              "characterIndex": 2
            },
            {
              "line": "Iya tapi kenapa hasilnya bisa cuma satu?",
              "reactionIndex": 4,
              "characterIndex": 1
            },
            {
              "line": "Owh maksud kamu itu di jawabannya yang salah di soal. Kalau kamu lihat di pilihan jawabannya, yang benar tuh adalah Hai Hai Hai karena memang output-nya bakal muncul 3 kali.",
              "reactionIndex": 4,
              "characterIndex": 2
            },
            {
              "line": "Oh jawabannya Hai Hai Hai karena diulang tiga kali sesuai dengan perulangan for?",
              "reactionIndex": 4,
              "characterIndex": 1
            },
            {
              "line": "Iya bener banget! Jangan lupa, kalau gak dipisah spasi atau \n, outputnya bakal langsung nempel kayak HaiHaiHai. Jadi perlu perhatiin juga formatnya.",
              "reactionIndex": 4,
              "characterIndex": 2
            },
            {
              "line": "Paham sekarang! Jadi kalau mau hasilnya ada spasi antar 'Hai', harus pakai spasi dalam printf ya?",
              "reactionIndex": 4,
              "characterIndex": 1
            },
            {
              "line": "Betul banget! Jangan lupa perhatikan juga kapan ada perulangan dan bagaimana outputnya dicetak.",
              "reactionIndex": 4,
              "characterIndex": 2
            },
            {
              "line": "Thanks bro! Sekarang baru nyantol di otak! Aku bakal latihan lagi!",
              "reactionIndex": 2,
              "characterIndex": 1
            }
          ],
          "next": "soal3_2",
          "nextType": "soal"
        },
        {
          "id": "benar3_last",
          "dialogs": [
            {
              "line": "Yoi Mas, jawabannya C! Loop-nya jalan tiga kali, makanya 'Hai' dicetak tiga kali.",
              "reactionIndex": 2,
              "characterIndex": 2
            },
            {
              "line": "Akhirnya paham juga, makasih Mas.",
              "reactionIndex": 2,
              "characterIndex": 1
            },
            {
              "line": "Yaudah berarti mie ayam yang itu gratis deh",
              "reactionIndex": 2,
              "characterIndex": 2
            },
            {
              "line": "Mantap!!!",
              "reactionIndex": 2,
              "characterIndex": 1
            }
          ],
          "next": null,
          "nextType": ""
        }
      ],
      "questions": [
        {
          "id": "soal3_1",
          "text": "Kamu diminta untuk membuat program yang mencetak angka dari 1 sampai 10. Bagaimana cara kamu menggunakan for loop untuk melakukan ini?",
          "choices": [
            {
              "text": "for (int i = 1; i < 10; i++) { printf(\"%d \", i); }",
              "next": "salah3_1",
              "nextType": "dialog",
              "isCorrect": false
            },
            {
              "text": "for (int i = 0; i <= 10; i++) { printf(\"%d \", i); }",
              "next": "salah3_1",
              "nextType": "dialog",
              "isCorrect": false
            },
            {
              "text": "for (int i = 0; i < 10; i++) { printf(\"%d \", i); }",
              "next": "salah3_1",
              "nextType": "dialog",
              "isCorrect": false
            },
            {
              "text": "for (int i = 1; i < 11; i++) { printf(\"%d \", i); }",
              "next": "materi3_2",
              "nextType": "dialog",
              "isCorrect": true
            }
          ]
        },
        {
          "id": "soal3_2",
          "text": "Perhatikan potongan kode berikut. Apa output yang dihasilkan?",
          "code": "\n\n#include <stdio.h>\nint main() {\n    for (int i = 1; i <= 3; i++) {\n        printf(\"Hai \");\n    }\n    return 0;\n}\n\n",
          "choices": [
            {
              "text": "Hai",
              "next": "salah3_2",
              "nextType": "dialog",
              "isCorrect": false
            },
            {
              "text": "Hai Hai Hai",
              "next": "benar3_last",
              "nextType": "dialog",
              "isCorrect": true
            },
            {
              "text": "HaiHaiHai",
              "next": "salah3_2",
              "nextType": "dialog",
              "isCorrect": false
            },
            {
              "text": "HaiHai",
              "next": "salah3_2",
              "nextType": "dialog",
              "isCorrect": false
            }
          ]
        }
      ],
      "summary": [
        "Perulangan atau looping dalam pemrograman digunakan untuk menjalankan kode yang sama berulang kali.",
        "Ada tiga jenis perulangan utama: for, while, dan do while.",
        "Perulangan for digunakan saat sudah tahu berapa kali ingin mengulang.",
        "Contoh:",
        "#include <stdio.h>\n\nint main() {\n    for (int i = 1; i <= 5; i++) {\n        printf(\"Perulangan ke-%d\\n\", i);\n    }\n    return 0;\n}",
        "Penjelasan:\nfor (int i = 1; i <= 5; i++): Mulai dari i = 1, akan terus berulang selama i <= 5, dan setiap iterasi i akan bertambah satu.",
        "Kalau while, dipakai ketika belum tahu pasti berapa kali perulangan dilakukan, tapi mempunyai kondisi tertentu. Program akan terus mengulang selama kondisi itu masih benar.",
        "Contoh:",
        "#include <stdio.h>\n\nint main() {\n    int i = 1;\n    while (i <= 5) {\n        printf(\"Perulangan ke-%d\\n\", i);\n        i++;\n    }\n    return 0;\n}",
        "Penjelasan:\nwhile (i <= 5): Selama nilai i kurang dari atau sama dengan 5, perulangan akan terus dilakukan.",
        "Sedangkan do while mirip dengan while, tapi sedikit berbeda. Di sini, program akan menjalankan perulangan minimal satu kali, baru kemudian mengecek kondisinya.",
        "Contoh:",
        "#include <stdio.h>\n\nint main() {\n    int i = 1;\n    do {\n        printf(\"Perulangan ke-%d\\n\", i);\n        i++;\n    } while (i <= 5);\n    return 0;\n}",
        "Penjelasan:\ndo { ... } while (i <= 5): Program ini akan menjalankan perulangan minimal satu kali, meskipun i awalnya lebih besar dari 5 (karena kondisi diperiksa setelah perulangan)."
      ]
    },
    {
      "level": 4,
      "description": "Loop di dalam loop, plus rem darurat pakai break, continue, atau exit biar nggak melewati batas!",
      "title": "Nested Loop, Break, Continue, Exit",
      "background": "teman-cafe",
      "character1": "Adrian",
      "character1Images": [
        "adriankampus_biasa",
        "adriankampus_marah",
        "adriankampus_senang",
        "adriankampus_kecewa",
        "adriankampus_aksi"
      ],
      "character2": "Rusdi",
      "character2Images": [
        "rusdi_biasa",
        "rusdi_marah",
        "rusdi_senang",
        "rusdi_kecewa",
        "rusdi_aksi"
      ],
      "ilustrations": ["NESTED-LOOP", "BREAK-CONTINUE-EXIT"],
      "start": "preDialog4",
      "typeStart": "preDialog",
      "preDialog": [
        {
          "id": "preDialog4",
          "text": "Adrian mencoba nested loop membuat pola dan tabel. Rusdi memuji hasil kerja Adrian. Ini jadi semangat tambahan bagi Adrian.\nSuasana sore yang teduh. Adrian duduk santai di warung mi ayam milik Rusdi, menyandarkan tubuhnya ke kursi plastik sambil menyeruput kuah terakhir",
          "next": "intro4",
          "nextType": "dialog"
        }
      ],
      "dialogs": [
        {
          "id": "intro4",
          "dialogs": [
            {
              "line": "Seperti biasa, mie ayam Mas Rusdi gak pernah gagal. Mantap!",
              "reactionIndex": 2,
              "characterIndex": 1
            },
            {
              "line": "Yoi lah, harus dong. Rasa ga pernah bohong",
              "reactionIndex": 2,
              "characterIndex": 2
            },
            {
              "line": "Kadang yang kayak gini nih yang bikin hari berat jadi enteng",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Iya, kadang cuma butuh semangkuk mie sama obrolan ringan buat ngilangin pusing. Hidup emang kayak gitu, bro jangan kebanyakan nahan di kepala",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Setuju bang!",
              "reactionIndex": 2,
              "characterIndex": 1
            },
            {
              "line": "Yoi lah. Tapi ngomong-ngomong soal gak gagal… anak aku nih lagi belajar angka di rumah. Disuruh gurunya bikin ‘kegiatan berhitung yang menyenangkan’ gitu",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Eh, belajar angka gimana tuh, Mas? Seru dong! Boleh dong saya bantuin!",
              "reactionIndex": 2,
              "characterIndex": 1
            },
            {
              "line": "Jadi ceritanya anak saya disuruh bikin pola angka gitu, biar lebih seru pas belajar berhitung. Gurunya minta dibikin kreatif, gak cuma 1 tambah 1",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Wah, seru juga! Kayak pola-pola gitu ya, Mas? Saya tadi di kelas juga sempat belajar bikin pola pakai loop, tapi belum paham banget",
              "reactionIndex": 4,
              "characterIndex": 1
            },
            {
              "line": "Nah, pas banget. Saya kepikiran beberapa bentuk pola angka. Iseng aja sih, sambil nostalgia masa kuliah",
              "reactionIndex": 0,
              "characterIndex": 2
            }
          ],
          "choices": [
            {
              "text": "Wah, seru nih! Aku bikin yang bentuknya segitiga angka naik. Cocok buat anak-anak",
              "next": "scene4_1",
              "nextType": "dialog"
            },
            {
              "text": "Hmm, bisa juga aku bikin kayak tabel angka dulu, terus dibentuk jadi segitiga. Mau coba gitu?",
              "next": "scene4_2",
              "nextType": "dialog"
            },
            {
              "text": "Kalau aku sih tinggal pake dua loop aja satu buat baris, satu buat angka di dalemnya. Simpel lah",
              "next": "scene4_3",
              "nextType": "dialog"
            }
          ],
          "next": null,
          "nextType": null
        },
        {
          "id": "scene4_1",
          "dialogs": [
            {
              "line": "Wah, seru nih! Aku bikin yang bentuknya segitiga angka naik. Cocok buat anak-anak",
              "reactionIndex": 2,
              "characterIndex": 1
            },
            {
              "line": "Bagus tuh! Anak kecil biasanya suka yang bentuknya jelas dan naik gitu. Kayak gunung kecil dari angka",
              "reactionIndex": 2,
              "characterIndex": 2
            },
            {
              "line": "Berarti baris pertama satu angka, terus makin ke bawah makin banyak, ya? Hmm… jadi kalau tiga baris, bentuknya gini…",
              "reactionIndex": 4,
              "characterIndex": 1
            },
            {
              "line": "Terus terus, gimana hayo?",
              "reactionIndex": 2,
              "characterIndex": 2
            },
            {
              "line": "Eh, tapi bentar… cara ngulang angkanya gimana ya? Kok jadi bingung pas mau nambah di tiap barisnya…",
              "reactionIndex": 4,
              "characterIndex": 1
            },
            {
              "line": "Nah, itu kamu butuh dua loop. Yang luar buat barisnya, yang dalam buat ngatur berapa angka yang ditulis per baris. Misalnya, baris ke-3, berarti kamu cetak tiga angka",
              "reactionIndex": 4,
              "characterIndex": 2
            },
            {
              "line": "Hah? Gimana tuh maksudnya? Dua loop… jadi loop di dalam loop gitu, ya?",
              "reactionIndex": 4,
              "characterIndex": 1
            }
          ],
          "next": "materi4_1",
          "nextType": "dialog"
        },
        {
          "id": "scene4_2",
          "dialogs": [
            {
              "line": "Hmm, bisa juga aku bikin kayak tabel angka dulu, terus dibentuk jadi segitiga. Mau coba gitu?",
              "reactionIndex": 2,
              "characterIndex": 2
            },
            {
              "line": "Wah, keren tuh pendekatannya! Jadi kamu cetak angka urut dulu, baru dibikin format segitiga, ya?",
              "reactionIndex": 2,
              "characterIndex": 2
            },
            {
              "line": "Iya, misalnya mulai dari 1, terus 2, 3… lalu 4, 5, 6, 7, dan seterusnya. Tapi... bentar… gimana caranya nentuin jumlah angka di tiap barisnya ya?",
              "reactionIndex": 4,
              "characterIndex": 1
            },
            {
              "line": "Begini, Mas Adrian. Baris pertama satu angka, baris kedua dua angka, baris ketiga tiga angka... kamu tinggal pakai dua loop, satu buat baris, satu buat angka di tiap baris",
              "reactionIndex": 4,
              "characterIndex": 2
            },
            {
              "line": "Wah, pusing juga nih... Jadi loop-nya gimana ya? Kok aku masih bingung",
              "reactionIndex": 3,
              "characterIndex": 1
            }
          ],
          "next": "materi4_1",
          "nextType": "dialog"
        },
        {
          "id": "scene4_3",
          "dialogs": [
            {
              "line": "Kalau aku sih tinggal pake dua loop aja satu buat baris, satu buat angka di dalemnya. Simpel lah",
              "reactionIndex": 2,
              "characterIndex": 1
            },
            {
              "line": "Wah, kamu ngerti juga ya! Tapi kadang loop itu suka bikin pusing, apalagi pas ngatur angka yang naik-nurun",
              "reactionIndex": 2,
              "characterIndex": 2
            },
            {
              "line": "Iya sih, cuma aku masih bingung nih, gimana caranya biar angkanya pas muncul sesuai yang aku mau. Kadang malah nyelip atau kurang",
              "reactionIndex": 4,
              "characterIndex": 1
            },
            {
              "line": "Itu biasanya karena urutan loop atau variabel penghitungnya belum pas. Tapi tenang, nanti lama-lama terbiasa kok",
              "reactionIndex": 4,
              "characterIndex": 2
            },
            {
              "line": "Wah, kok kayaknya makin pusing ya... Aku ngerti konsepnya, tapi pas dipraktikkan malah acak-acakan. Hmm, harus coba lagi deh... tapi gimana ya caranya biar gak salah terus?",
              "reactionIndex": 3,
              "characterIndex": 1
            }
          ],
          "next": "materi4_1",
          "nextType": "dialog"
        },
        {
          "id": "materi4_1",
          "dialogs": [
            {
              "line": "Oke, kita mulai dengan 'Nested Loop'. Bayangin ini seperti pabrik kue lapis cerdas yang punya dua jenis tugas berulang.",
              "reactionIndex": 4,
              "characterIndex": 2,
              "ilustrationIndex": 0
            },
            {
              "line": "Lihat papan 'Lapisan: 1 dari 3'? Itu Loop Luar kita, bertugas membuat setiap lapisan kue utama, satu per satu, sampai tiga lapisan selesai.",
              "reactionIndex": 4,
              "characterIndex": 2,
              "ilustrationIndex": 0
            },
            {
              "line": "Mesin hiasan di atas dengan empat corong (bintang, hati, dll.) itu Loop Dalam. Untuk SETIAP satu lapisan kue dari Loop Luar, Loop Dalam ini harus menyelesaikan SEMUA tugasnya, yaitu menabur keempat jenis hiasan.",
              "reactionIndex": 4,
              "characterIndex": 2,
              "ilustrationIndex": 0
            },
            {
              "line": "Jadi, lapis pertama datang, dihias lengkap. Lapis kedua datang, dihias lengkap lagi dari awal oleh mesin hiasan. Begitu seterusnya. Paham kan konsep loop di dalam loop?",
              "reactionIndex": 4,
              "characterIndex": 2,
              "ilustrationIndex": 0
            },
            {
              "line": "Ohhh, jadi Loop Dalam itu kerja berkali-kali untuk setiap satu kali Loop Luar jalan ya, Mas?",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Nah, itu dia! Sekarang, coba kalau paham aku tes ya! Jawab soal ini.",
              "reactionIndex": 4,
              "characterIndex": 2
            }
          ],
          "next": "soal4_1",
          "nextType": "soal"
        },
        {
          "id": "salah4_1",
          "dialogs": [
            {
              "line": "Hmm jawabannya belum tepat nih Di!",
              "reactionIndex": 3,
              "characterIndex": 2
            },
            {
              "line": "Yah kenapa ya?",
              "reactionIndex": 3,
              "characterIndex": 1
            },
            {
              "line": "Coba ingat lagi konsep loop luar untuk baris dan loop dalam untuk bintang. Baca lagi materinya pelan-pelan, kamu pasti bisa nemu jawabannya!",
              "reactionIndex": 4,
              "characterIndex": 2
            },
            {
              "line": "Siap aku baca lagi deh!",
              "reactionIndex": 2,
              "characterIndex": 1
            }
          ],
          "next": "soal4_1",
          "nextType": "soal"
        },
        {
          "id": "materi4_2",
          "dialogs": [
            {
              "line": "Jawabanmu soal nested loop tadi benar! Sekarang, bayangkan di pabrik kue tadi ada tombol-tombol khusus ini.",
              "reactionIndex": 4,
              "characterIndex": 2,
              "ilustrationIndex": 1
            },
            {
              "line": "Tombol Merah 'STOP! HENTIKAN SEMUA' itu seperti perintah 'break'. Kalau ditekan, seluruh proses pembuatan dan hiasan kue dihentikan saat itu juga. Loop-nya berhenti total!",
              "reactionIndex": 4,
              "characterIndex": 2,
              "ilustrationIndex": 1
            },
            {
              "line": "Tombol Kuning 'LEWATI HIASAN INI' itu seperti 'continue'. Misalnya kita gak mau kasih hiasan bintang di satu kue, tombol ini ditekan, hiasan bintang dilewati, tapi kue lanjut ke hiasan berikutnya dan pabrik tetap jalan.",
              "reactionIndex": 4,
              "characterIndex": 2,
              "ilustrationIndex": 1
            },
            {
              "line": "Terakhir, Tombol Biru 'KELUAR DARI PABRIK' itu 'exit()'. Kalau ini ditekan, bukan cuma pabriknya berhenti, tapi kamu langsung keluar dari game simulasi pabrik ini! Seluruh program berhenti.",
              "reactionIndex": 0,
              "characterIndex": 2,
              "ilustrationIndex": 1
            },
            {
              "line": "Wah, jadi 'break' menghentikan loop sekarang, 'continue' melewati satu putaran, dan 'exit' menghentikan seluruh program ya, Mas?",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Tepat sekali! Coba sekarang tes pemahamanmu lagi dengan soal ini.",
              "reactionIndex": 4,
              "characterIndex": 2
            }
          ],
          "next": "soal4_2",
          "nextType": "soal"
        },
        {
          "id": "salah4_2",
          "dialogs": [
            {
              "line": "Eh Mas Adrian jawabannya tadi belum tepat nih.",
              "reactionIndex": 3,
              "characterIndex": 2
            },
            {
              "line": "Waduh aku salahnya di mana ya?",
              "reactionIndex": 3,
              "characterIndex": 1
            },
            {
              "line": "Gini, coba inget dulu... Kalau mau lewati suatu angka tapi tetep lanjut ke angka berikutnya, itu perlu keyword apa? Terus kalau mau berhenti dari loop aja, bukan dari program, itu keyword-nya beda lagi.",
              "reactionIndex": 4,
              "characterIndex": 2
            },
            {
              "line": "Nah kalau mau berhenti total sampai programnya bener-bener selesai, ada keyword lain lagi.",
              "reactionIndex": 4,
              "characterIndex": 2
            },
            {
              "line": "Jadi beda-beda ya tergantung mau ngapain?",
              "reactionIndex": 4,
              "characterIndex": 1
            },
            {
              "line": "Betul banget! Jadi fokus dulu: kamu mau lewatin angka, keluar dari loop, atau keluar dari program? Coba baca lagi materinya tentang perbedaan tiga keyword itu.",
              "reactionIndex": 4,
              "characterIndex": 2
            },
            {
              "line": "Oke, aku cek lagi deh pelan-pelan.",
              "reactionIndex": 0,
              "characterIndex": 1
            }
          ],
          "next": "soal4_2",
          "nextType": "soal"
        },
        {
          "id": "benar4_last",
          "dialogs": [
            {
              "line": "Wihhh, jawabanku benar nih!",
              "reactionIndex": 2,
              "characterIndex": 1
            },
            {
              "line": "Yoiii, mantap bro! Berarti kamu udah paham konsep break.",
              "reactionIndex": 2,
              "characterIndex": 2
            },
            {
              "line": "Wah keren juga ya. Jadi tergantung situasi, kita bisa pilih mau keluar dari loop atau cuma skip sementara.",
              "reactionIndex": 4,
              "characterIndex": 1
            },
            {
              "line": "Akhirnya aku paham juga materi ini, makasih ya Mas",
              "reactionIndex": 2,
              "characterIndex": 1
            },
            {
              "line": "Aman aja Bro",
              "reactionIndex": 2,
              "characterIndex": 2
            }
          ],
          "next": null,
          "nextType": ""
        }
      ],
      "questions": [
        {
          "id": "soal4_1",
          "text": "Perhatikan pola berikut. Loop mana yang paling tepat dipakai untuk baris (luar) dan bintang (dalam)?",
          "code": "\n\n*\n* *\n* * *\n* * * *\n\n",
          "choices": [
            {
              "text": "for (int i = 1; i <= 4; i++) // Loop baris\nfor (int j = 1; j <= i; j++) // Loop bintang",
              "next": "materi4_2",
              "nextType": "dialog",
              "isCorrect": true
            },
            {
              "text": "for (int i = 1; i <= 4; i++) // Loop bintang\nfor (int j = 1; j <= i; j++) // Loop baris",
              "next": "salah4_1",
              "nextType": "dialog",
              "isCorrect": false
            },
            {
              "text": "for (int i = 1; i <= 4; i++) // Loop baris\nfor (int j = 4; j >= i; j--) // Loop bintang",
              "next": "salah4_1",
              "nextType": "dialog",
              "isCorrect": false
            },
            {
              "text": "for (int i = 4; i >= 1; i--) // Loop baris\nfor (int j = 1; j <= i; j++) // Loop bintang",
              "next": "salah4_1",
              "nextType": "dialog",
              "isCorrect": false
            }
          ]
        },
        {
          "id": "soal4_2",
          "text": "Bayangin kamu lagi pake for buat ngeloop angka dari 1 sampai 5. Terus di tengah-tengah loop kamu pengen:\n\nLewatin aja kalau ketemu angka 2,\n\nLangsung keluar dari loop kalau ketemu angka 3 (tapi lanjut ke angka berikutnya),\n\nKeluar dari seluruh program kalau ketemu angka 5.\n\nNah menurutmu keyword apa aja yang harus dipakai?",
          "choices": [
            {
              "text": "break, continue, exit",
              "next": "salah4_2",
              "nextType": "dialog",
              "isCorrect": false
            },
            {
              "text": "continue, exit, break",
              "next": "salah4_2",
              "nextType": "dialog",
              "isCorrect": false
            },
            {
              "text": "exit, break, continue",
              "next": "salah4_2",
              "nextType": "dialog",
              "isCorrect": false
            },
            {
              "text": "continue, break, exit",
              "next": "benar4_last",
              "nextType": "dialog",
              "isCorrect": true
            }
          ]
        }
      ],
      "summary": [
        "1. Nested Loop:\nNested loop adalah perulangan yang berada di dalam perulangan lain. Biasanya digunakan untuk menyusun data dua dimensi seperti tabel, matriks, atau pola bintang.",
        "Contoh kode nested loop:",
        "#include <stdio.h>\n\nint main() {\n    for (int i = 1; i <= 3; i++) {\n        for (int j = 1; j <= 3; j++) {\n            printf(\"i = %d, j = %d\\n\", i, j);\n        }\n    }\n    return 0;\n}",
        "Output dari program:",
        "i = 1, j = 1\ni = 1, j = 2\ni = 1, j = 3\ni = 2, j = 1\ni = 2, j = 2\ni = 2, j = 3\ni = 3, j = 1\ni = 3, j = 2\ni = 3, j = 3",
        "Penjelasan:\n- Loop luar (i) berjalan 3 kali.\n- Setiap kali loop luar berjalan, loop dalam (j) juga berjalan 3 kali.\n- Kombinasi nilai i dan j dicetak di layar.",
        "2. Break:\nBreak untuk menghentikan proses perulangan secara paksa sebelum selesai, biasanya saat kondisi tertentu terpenuhi.",
        "Contoh kode break:",
        "#include <stdio.h>\n\nint main() {\n    for (int i = 1; i <= 5; i++) {\n        if (i == 3) {\n            break;\n        }\n        printf(\"Perulangan ke-%d\\n\", i);\n    }\n    return 0;\n}",
        "Output dari program:",
        "Perulangan ke-1\nPerulangan ke-2",
        "Penjelasan:\n- Perulangan berhenti saat i == 3 karena ada break.\n- Hanya mencetak perulangan ke-1 dan ke-2.",
        "3. Continue:\nContinue untuk melewati satu iterasi perulangan dan langsung lanjut ke iterasi berikutnya tanpa keluar dari loop.",
        "Contoh kode continue:",
        "#include <stdio.h>\n\nint main() {\n    for (int i = 1; i <= 5; i++) {\n        if (i == 3) {\n            continue;\n        }\n        printf(\"Perulangan ke-%d\\n\", i);\n    }\n    return 0;\n}",
        "Output dari program:",
        "Perulangan ke-1\nPerulangan ke-2\nPerulangan ke-4\nPerulangan ke-5",
        "Penjelasan:\n- Saat i == 3, continue membuat program melewatkan print.\n- Perulangan ke-3 tidak dicetak.",
        "4. Exit:\nExit untuk menghentikan seluruh program, bukan hanya perulangan. Biasanya digunakan saat kondisi kritis terjadi.",
        "Contoh kode exit:",
        "#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    for (int i = 1; i <= 5; i++) {\n        if (i == 4) {\n            printf(\"Keluar dari program\\n\");\n            exit(0);\n        }\n        printf(\"Perulangan ke-%d\\n\", i);\n    }\n    return 0;\n}",
        "Output dari program:",
        "Perulangan ke-1\nPerulangan ke-2\nPerulangan ke-3\nKeluar dari program",
        "Penjelasan:\n- Program berhenti total saat i == 4.\n- Tidak ada perulangan ke-4 dan ke-5 karena exit menghentikan program."
      ]
    },
    {
      "level": 5,
      "description": "Biar nggak ribet, pecah kode kamu jadi fungsi-fungsi keren yang bisa dipanggil kapan aja!",
      "title": "Pemanggilan Fungsi dalam Pemrograman",
      "background": "lab",
      "character1": "Adrian",
      "character1Images": [
        "adriankampus_biasa",
        "adriankampus_marah",
        "adriankampus_senang",
        "adriankampus_kecewa",
        "adriankampus_aksi"
      ],
      "character2": "Pak Rongga",
      "character2Images": [
        "rongga_biasa",
        "rongga_marah",
        "rongga_senang",
        "rongga_kecewa",
        "rongga_aksi"
      ],
      "ilustrations": ["FUNGSI-1", "FUNGSI-2"],
      "start": "preDialog5",
      "typeStart": "preDialog",
      "preDialog": [
        {
          "id": "preDialog5",
          "text": "Adrian duduk terpaku, menatap papan tulis dengan mata melebar. Di hadapannya berdiri Pak Rongga, dosen pemrograman yang terkenal tegas dan jenius. Suaranya yang berat mengumumkan tugas besar minggu ini: “Buatlah program untuk menghitung nilai akhir mahasiswa, lengkap dengan semua komponennya: tugas, kuis, UTS, dan UAS.”",
          "next": "preDialog5_2",
          "nextType": "preDialog"
        },
        {
          "id": "preDialog5_2",
          "text": "Jantung Adrian berdegup kencang. “Waduh, tugas besar? Program penuh begitu? Gimana cara mulainya…” pikirnya panik. Ia teringat betapa ribetnya program sebelumnya yang ia buat tanpa struktur kode berulang, variabel bertumpuk, dan logika campur aduk yang bikin pusing tujuh keliling.",
          "next": "intro5",
          "nextType": "dialog"
        }
      ],
      "dialogs": [
        {
          "id": "intro5",
          "dialogs": [
            {
              "line": "Kalau selama ini kalian nulis kode panjang terus ngulang-ngulang baris yang sama, hari ini saatnya belajar cara jadi programmer yang lebih rapi dan efisien.",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Siap Pak",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Adrian coba saya mau tanya. Kamu udah paham fungsi itu buat apa?",
              "reactionIndex": 4,
              "characterIndex": 2
            },
            {
              "line": "Eh… buat nyimpen potongan kode yang bisa dipakai ulang, Pak. Kayak biar gak nulis hal yang sama terus.",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Bagus. Coba lebih rinci. Misal kamu punya data nilai lima mahasiswa. Prosesnya dari input sampai cetak hasil, kamu bisa pisah jadi fungsi apa aja?",
              "reactionIndex": 2,
              "characterIndex": 2
            }
          ],
          "choices": [
            {
              "text": "Input nilai, terus hitung rata-rata, terus cetak?",
              "next": "scene5_1",
              "nextType": "dialog"
            },
            {
              "text": "Pak, emang harus satu fungsi satu tugas ya?",
              "next": "scene5_2",
              "nextType": "dialog"
            },
            {
              "text": "Jadi tiga fungsi, mungkin ya… input, hitung rata-rata, sama cetak hasil?",
              "next": "scene5_3",
              "nextType": "dialog"
            }
          ],
          "next": null,
          "nextType": null
        },
        {
          "id": "scene5_1",
          "dialogs": [
            {
              "line": "Input nilai, terus hitung rata-rata, terus cetak?",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Iya, inputNilai, hitungRata, dan tampilkanHasil. Itu langkah dasar. Coba kamu jelaskan sedikit",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Jadi, Pak, kita bisa buat fungsi untuk input nilai, terus satu untuk menghitung rata-rata, dan terakhir satu lagi untuk mencetak hasilnya.",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Tepat sekali. Sekarang, coba kamu jelaskan lebih lanjut tentang masing-masing fungsi itu. Apa yang akan dilakukan oleh setiap fungsi?",
              "reactionIndex": 2,
              "characterIndex": 2
            },
            {
              "line": "Untuk fungsi input nilai, kita akan meminta pengguna memasukkan nilai satu per satu, lalu menyimpannya dalam sebuah list atau array. Untuk fungsi hitung rata-rata, kita akan menjumlahkan semua nilai yang sudah diinput dan membaginya dengan jumlah mahasiswa. Dan untuk fungsi cetak, kita akan menampilkan semua nilai dan rata-ratanya.",
              "reactionIndex": 4,
              "characterIndex": 1
            },
            {
              "line": "Bagus, Adrian. Tapi, apakah kamu sudah memikirkan bagaimana cara menangani input yang tidak valid? Misalnya, jika pengguna memasukkan nilai di luar rentang yang diizinkan?",
              "reactionIndex": 2,
              "characterIndex": 2
            },
            {
              "line": "Ehm… saya belum paham, Pak. Fungsi itu gimana, ya? Kita harus pisah kode jadi bagian-bagian kecil, tapi saya belum tahu cara buat dan supaya fungsi-fungsi itu nyambung gimana.",
              "reactionIndex": 3,
              "characterIndex": 1
            }
          ],
          "next": "materi5_1",
          "nextType": "dialog"
        },
        {
          "id": "scene5_2",
          "dialogs": [
            {
              "line": "Pak, emang harus satu fungsi satu tugas ya?",
              "reactionIndex": 4,
              "characterIndex": 1
            },
            {
              "line": "Kalau kamu gabungin sih sebenarnya bisa, tapi nanti kode jadi susah diatur dan dimodifikasi. Konsep fungsi yang baik memang sebaiknya tiap fungsi punya satu tugas spesifik.",
              "reactionIndex": 4,
              "characterIndex": 2
            },
            {
              "line": "Oh, jadi fungsi itu kayak bagian-bagian kecil yang masing-masing pegang satu tugas supaya gampang dipahami?",
              "reactionIndex": 4,
              "characterIndex": 1
            },
            {
              "line": "Iya, benar. Dengan cara itu, kamu juga bisa pakai ulang fungsi yang sama di bagian lain tanpa harus nulis ulang kode.",
              "reactionIndex": 2,
              "characterIndex": 2
            },
            {
              "line": "Tapi, kok saya masih agak susah ngerti ya, cara bikin fungsi dan nyambunginnya itu gimana.",
              "reactionIndex": 4,
              "characterIndex": 1
            }
          ],
          "next": "materi5_1",
          "nextType": "dialog"
        },
        {
          "id": "scene5_3",
          "dialogs": [
            {
              "line": "Jadi tiga fungsi, mungkin ya… input, hitung rata-rata, sama cetak hasil?",
              "reactionIndex": 2,
              "characterIndex": 1
            },
            {
              "line": "Iya, itu udah tepat. Masing-masing fungsi punya tugas khusus.",
              "reactionIndex": 2,
              "characterIndex": 2
            },
            {
              "line": "Tapi, saya masih belum ngerti gimana cara panggil fungsi-fungsi itu supaya nggak bingung.",
              "reactionIndex": 3,
              "characterIndex": 1
            },
            {
              "line": "Kamu cukup panggil fungsi satu per satu sesuai urutan proses. Misalnya, input dulu, baru hitung, terus cetak hasil",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Kalau ada yang salah waktu input, gimana, Pak?",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Kamu bisa tambahin validasi di fungsi input supaya minta ulang kalau inputnya salah.",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Eh maksudnya gimana pak? Saya belum paham..",
              "reactionIndex": 3,
              "characterIndex": 1
            }
          ],
          "next": "materi5_1",
          "nextType": "dialog"
        },
        {
          "id": "materi5_1",
          "dialogs": [
            {
              "line": "Kamu pasti pernah belanja online kan? Nah, bayangkan fungsi itu seperti kurir yang mengantar paket. Coba lihat gambar kurir ini.",
              "reactionIndex": 4,
              "characterIndex": 2,
              "ilustrationIndex": 0
            },
            {
              "line": "Kurir ini membawa paket spesifik, misalnya paket bertuliskan 'int' ini berarti dia membawa bilangan bulat. Paket yang dia bawa itu adalah 'nilai return' dari fungsi.",
              "reactionIndex": 4,
              "characterIndex": 2,
              "ilustrationIndex": 0
            },
            {
              "line": "Jadi, kalau fungsinya bertipe 'int', kurirnya bawa paket bilangan bulat. Kalau 'float', bawa bilangan desimal, kalau 'char' ya karakter. Isi paketnya itu hasil kerja si fungsi.",
              "reactionIndex": 4,
              "characterIndex": 2
            },
            {
              "line": "Oh, berarti fungsi itu kayak kurir yang dikirim buat ngasih paket dengan jenis tertentu, ya? Dan isi paketnya itu nilai return?",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Tepat! Seperti fungsi `int tambah(int a, int b)` yang mengembalikan hasil `a + b`, kurir itu bertugas mengantar hasil penjumlahannya kepadamu.",
              "reactionIndex": 4,
              "characterIndex": 2
            },
            {
              "line": "Wah, jadi sekarang saya mulai paham! Fungsi itu kayak kurir yang bawa paket, dan paketnya itu nilai return. Tergantung jenisnya, bisa int, float, char, dan lain-lain.",
              "reactionIndex": 3,
              "characterIndex": 1
            },
            {
              "line": "Bagus kalau kamu udah mulai paham. Sekarang, coba saya tes sedikit ya.",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Boleh, Pak. Saya ready!",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Coba kamu jawab soal ini",
              "reactionIndex": 0,
              "characterIndex": 2
            }
          ],
          "next": "soal5_1",
          "nextType": "soal"
        },
        {
          "id": "salah5_1",
          "dialogs": [
            {
              "line": "Jawabanmu kurang tepat Adrian.",
              "reactionIndex": 1,
              "characterIndex": 2
            },
            {
              "line": "Saya masih bingung pak.",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Ngga masalah, Adrian. Coba perhatikan lagi. Fungsi itu bisa mengembalikan nilai ke pemanggilnya. Dalam kasus ini fungsi tambah menggunakan return untuk mengembalikan hasil.",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Baik pak akan saya coba lebih teliti lagi.",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Jadi tipe fungsi berdasarkan apakah dia mengembalikan nilai atau tidak. Fungsi seperti ini memerlukan tipe data di depan nama fungsi yang menunjukkan nilai yang akan dikembalikan.",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Baik pak akan saya coba lagi.",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Semoga ini membantu. Coba pikirkan lagi, ya!",
              "reactionIndex": 0,
              "characterIndex": 2
            }
          ],
          "next": "soal5_1",
          "nextType": "soal"
        },
        {
          "id": "materi5_2",
          "dialogs": [
            {
              "line": "Betul sekali jawabanmu soal fungsi tadi! Sekarang, ada juga fungsi yang seperti kurir ini, dia tidak bawa paket 'nilai return' untukmu.",
              "reactionIndex": 4,
              "characterIndex": 2,
              "ilustrationIndex": 1
            },
            {
              "line": "Dia tetap punya tugas penting: menyampaikan pesan atau melakukan suatu perintah, seperti bilang 'Halo bagaimana kabarmu?!'. Ini adalah fungsi 'void', dia hanya beraksi tanpa memberi hasil balik.",
              "reactionIndex": 4,
              "characterIndex": 2,
              "ilustrationIndex": 1
            },
            {
              "line": "Oh... jadi fungsi void itu cuma ngejalanin perintah aja ya, Pak? Gak ngasih kita paket atau nilai balik?",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Tepat sekali! Seperti fungsi `void beriSalam()` yang hanya mencetak sapaan. Dia melakukan tugasnya, tapi tidak mengembalikan nilai apa pun. Nah, kalau sudah paham, sekarang jawab soal ini!",
              "reactionIndex": 4,
              "characterIndex": 2
            }
          ],
          "next": "soal5_2",
          "nextType": "soal"
        },
        {
          "id": "salah5_2",
          "dialogs": [
            {
              "line": "Jawabanmu belum tepat Adrian.",
              "reactionIndex": 1,
              "characterIndex": 2
            },
            {
              "line": "Wah, saya masih bingung pak.",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Ngga masalah Adrian. Coba kita bahas sedikit. Fungsi itu bisa mengembalikan nilai atau tidak. Kalau mengembalikan nilai artinya fungsi memberikan hasil yang bisa digunakan kembali di bagian lain dari program.",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Jadi kalau fungsi tidak mengembalikan nilai artinya apa pak?",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Fungsi yang tidak mengembalikan nilai hanya melakukan tugas tertentu, seperti mencetak sesuatu ke layar tanpa memberikan hasil yang bisa dipakai di tempat lain.",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Oh jadi tergantung apa yang dilakukan oleh fungsi itu ya?",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Betul. Jadi, sekarang coba lihat lagi fungsi sapa. Fungsi itu cuma mencetak pesan kan? Nah berdasarkan itu, coba dibaca pelan-pelan soalnya. Apa yang dilakukan oleh fungsi itu dan apakah fungsi tersebut mengembalikan nilai atau tidak?",
              "reactionIndex": 2,
              "characterIndex": 2
            }
          ],
          "next": "soal5_2",
          "nextType": "soal"
        },
        {
          "id": "benar5_last",
          "dialogs": [
            {
              "line": "Jawabanmu sudah tepat, Adrian!",
              "reactionIndex": 2,
              "characterIndex": 2
            },
            {
              "line": "Alhamdulillah! Jadi fungsi sapa itu tidak mengembalikan nilai, ya?",
              "reactionIndex": 2,
              "characterIndex": 1
            },
            {
              "line": "Betul. Fungsi sapa hanya mencetak pesan, tidak ada nilai yang dikembalikan.",
              "reactionIndex": 2,
              "characterIndex": 2
            },
            {
              "line": "Oh jadi fungsi yang mengembalikan nilai itu memberikan hasil yang bisa dipakai lagi, ya?",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Tepat! Fungsi dengan return value mengirimkan hasil yang bisa digunakan lagi di tempat lain dalam program, sementara fungsi tanpa return value hanya menjalankan tugas tanpa memberikan hasil.",
              "reactionIndex": 2,
              "characterIndex": 2
            }
          ],
          "next": null,
          "nextType": ""
        }
      ],
      "questions": [
        {
          "id": "soal5_1",
          "text": "Coba lihat kode ini. Nah, tipe fungsi 'tambah' ini termasuk kategori apa ya?",
          "code": "#include <stdio.h>\n\nint tambah(int a, int b) {\n    return a + b;\n}\n\nint main() {\n    int hasil = tambah(4, 5);\n    printf(\"Hasil: %d\\n\", hasil);\n    return 0;\n}",
          "choices": [
            {
              "text": "Fungsi dengan return integer",
              "next": "materi5_2",
              "nextType": "dialog",
              "isCorrect": true
            },
            {
              "text": "Fungsi dengan no return(void)",
              "next": "salah5_1",
              "nextType": "dialog",
              "isCorrect": false
            },
            {
              "text": "Fungsi dengan return float",
              "next": "salah5_1",
              "nextType": "dialog",
              "isCorrect": false
            },
            {
              "text": "Fungsi dengan return char",
              "next": "salah5_1",
              "nextType": "dialog",
              "isCorrect": false
            }
          ]
        },
        {
          "id": "soal5_2",
          "text": "Coba lihat kode ini, Nah, tipe fungsi 'sapa' ini termasuk kategori apa?",
          "code": "#include <stdio.h>\n\nvoid sapa() {\n    printf(\"Halo, selamat pagi!\\n\");\n}\n\nint main() {\n    sapa();\n    return 0;\n}",
          "choices": [
            {
              "text": "char",
              "next": "salah5_2",
              "nextType": "dialog",
              "isCorrect": false
            },
            {
              "text": "void",
              "next": "benar5_last",
              "nextType": "dialog",
              "isCorrect": true
            },
            {
              "text": "string",
              "next": "salah5_2",
              "nextType": "dialog",
              "isCorrect": false
            },
            {
              "text": "return",
              "next": "salah5_2",
              "nextType": "dialog",
              "isCorrect": false
            }
          ]
        }
      ],
      "summary": [
        "1. Fungsi dengan Return Value: mengembalikan nilai setelah dieksekusi. Nilai tersebut bisa disimpan dalam variabel dan digunakan di bagian lain dalam program.",
        "Contoh fungsi dengan return value:",
        "#include <stdio.h>\n\n// Fungsi yang mengembalikan hasil penjumlahan dua angka\nint tambah(int a, int b) {\n    return a + b;  // Mengembalikan hasil penjumlahan\n}\n\nint main() {\n    int hasil = tambah(3, 4);  // Memanggil fungsi dan menyimpan hasilnya\n    printf(\"Hasil penjumlahan: %d\\n\", hasil);  // Menampilkan hasil\n    return 0;\n}",
        "Output dari program: Hasil penjumlahan: 7",
        "Penjelasan:\n- Fungsi tambah memiliki tipe data int karena mengembalikan sebuah angka (hasil penjumlahan).\n- Fungsi tambah menerima dua parameter a dan b, dan mengembalikan hasil penjumlahan keduanya.\n- Di main, kita memanggil fungsi tambah(3, 4) dan menyimpan hasilnya dalam variabel hasil, yang kemudian ditampilkan.",
        "2. Fungsi Void: tidak mengembalikan nilai apapun. Biasanya untuk melakukan aksi, seperti menampilkan pesan atau mengubah data.",
        "Contoh fungsi void:",
        "#include <stdio.h>\n\n// Fungsi void yang hanya mencetak pesan\nvoid cetakPesan() {\n    printf(\"Ini adalah pesan dari fungsi void.\\n\");\n}\n\nint main() {\n    cetakPesan();  // Memanggil fungsi void\n    return 0;\n}",
        "Output dari program: Ini adalah pesan dari fungsi void.",
        "Penjelasan:\n- Fungsi cetakPesan adalah fungsi void karena hanya melakukan aksi (mencetak pesan) dan tidak mengembalikan nilai apapun.\n- Fungsi ini dipanggil di dalam main, dan ketika dipanggil, pesan akan dicetak ke layar.",
        "Perbedaan utama: Fungsi dengan return value mengembalikan hasil, sedangkan fungsi void hanya melakukan aksi tanpa memberikan hasil."
      ]
    },
    {
      "level": 6,
      "description": "Mau variabel kamu ngumpet, muncul di mana-mana? Kenali kelas penyimpanan biar makin jago!",
      "title": "Penyimpanan variabel dalam pemrograman",
      "background": "cafe-crush",
      "character1": "Adrian",
      "character1Images": [
        "adriancafe_biasa",
        "adriancafe_marah",
        "adriancafe_senang",
        "adriancafe_kecewa",
        "adriancafe_aksi"
      ],
      "character2": "Jennie",
      "character2Images": [
        "crush_biasa",
        "crush_marah",
        "crush_senang",
        "crush_kecewa",
        "crush_aksi"
      ],
      "ilustrations": ["PENYIMPANAN-VARIABEL"],
      "start": "preDialog6",
      "typeStart": "preDialog",
      "preDialog": [
        {
          "id": "preDialog6",
          "text": "Adrian duduk di sudut kafe favoritnya, sambil membuka laptop dan menyesap kopi hangat. Hari itu suasana cukup ramai, tapi fokus Adrian masih terpecah antara catatan dan baris-baris kode yang belum selesai.",
          "next": "preDialog6_2",
          "nextType": "preDialog"
        },
        {
          "id": "preDialog6_2",
          "text": "Tiba-tiba, dari balik pintu, Jennie masuk dengan langkah santai. Biasanya dia cuek dan jarang berbicara banyak, tapi kali ini dia langsung menghampiri Adrian dengan ekspresi agak serius.",
          "next": "intro6",
          "nextType": "dialog"
        }
      ],
      "dialogs": [
        {
          "id": "intro6",
          "dialogs": [
            {
              "line": "Eh... Adrian? Wah, nggak nyangka ketemu kamu di sini. Sering ke kafe ini, ya?",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Oh, Jennie? Iya, ini tempat andalan buat ngoding. Lagi cari suasana biar lebih fokus. Kamu sendiri kok bisa ke sini?",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Hehe, iseng aja mampir. Katanya tempatnya enak buat nugas. Eh... sekalian deh, pas banget ketemu kamu.",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Hmm, tumben kamu ramah. Ada angin apa nih?",
              "reactionIndex": 4,
              "characterIndex": 1
            },
            {
              "line": "Hehe, ketahuan ya. Gini, aku lagi ngerjain tugas proyek akhir, dan jujur aja... aku bener-bener blank soal array, struct, sama file. Bisa bantuin aku nggak?",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Hahaha, pantes aja. Ya udah, sini duduk. Kita liat bareng-bareng, mana yang bikin kamu bingung.",
              "reactionIndex": 0,
              "characterIndex": 1
            }
          ],
          "choices": [
            {
              "text": "Santai, aku juga lagi belajar kok. Kita coba bareng aja yuk",
              "next": "scene6_1",
              "nextType": "dialog"
            },
            {
              "text": "Ok sini duduk sebelahku, aku jelasin pelan-pelan ya",
              "next": "scene6_2",
              "nextType": "dialog"
            },
            {
              "text": "Hmm, kalau kamu mau aku jelasin, kamu bayar pake es teh, deal ga?",
              "next": "scene6_3",
              "nextType": "dialog"
            }
          ],
          "next": null,
          "nextType": null
        },
        {
          "id": "scene6_1",
          "dialogs": [
            {
              "line": "Santai, aku juga lagi belajar kok. Kita coba bareng aja yuk",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Iya biar aku juga ngga kelihatan konyol di depan kamu.",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Hahaha apaan sih, aku juga ngga sepinter si joji judging itu",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Ok jadi kita mulai dari mana dulu? array?",
              "reactionIndex": 4,
              "characterIndex": 2
            },
            {
              "line": "Siap! Jadi, array itu kayak tempat buat nyimpen data yang jenisnya sama, terus struct itu semacam kumpulan data yang bisa beda-beda jenisnya.",
              "reactionIndex": 2,
              "characterIndex": 1
            },
            {
              "line": "Oke, terus gimana dengan file?",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "File itu buat nyimpen data supaya nggak hilang setelah program selesai jalan.",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Aku ngerti sih… dikit. Tapi masih kebayang-bayang gimana caranya dipakai bareng semua. Bisa digabung gitu ya? Aku masih bingung deh..",
              "reactionIndex": 4,
              "characterIndex": 2
            }
          ],
          "next": "materi6_1",
          "nextType": "dialog"
        },
        {
          "id": "scene6_2",
          "dialogs": [
            {
              "line": "Ok sini duduk sebelahku, aku jelasin pelan-pelan ya",
              "reactionIndex": 2,
              "characterIndex": 1
            },
            {
              "line": "Hehe, makasih, biasanya aku nggak pernah minta tolong orang buat coding begini.",
              "reactionIndex": 2,
              "characterIndex": 2
            },
            {
              "line": "Iya, aku tahu kamu biasanya mandiri. Tapi kadang belajar bareng itu justru bikin kita lebih cepat paham.",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Bener juga sih. Aku cuma takut nanti malah ganggu kamu yang lagi sibuk.",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Aman aja Jen, gak ganggu kok. Aku juga jadi sekalian ngulang-ngulang. Biar gak cuma paham pas denger doang.",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Kalau gitu aku serius nih, jangan sampe aku nyusahin kamu.",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Tenang, aku udah biasa pusing. Jadi paling mentok kita pusing bareng, kan?",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Serius donggg ih",
              "reactionIndex": 1,
              "characterIndex": 2
            },
            {
              "line": "Mode serius aktif! Oke, kita mulai dari mana dulu nih? Mau bahas array, struct, atau file?",
              "reactionIndex": 4,
              "characterIndex": 1
            },
            {
              "line": "Hmm… boleh nanya dulu gak? Aku agak bingung… sebenernya variabel-variabel yang kita bikin itu disimpan di mana sih? Terus kalau programnya dimatiin, datanya ke mana?",
              "reactionIndex": 4,
              "characterIndex": 2
            }
          ],
          "next": "materi6_1",
          "nextType": "dialog"
        },
        {
          "id": "scene6_3",
          "dialogs": [
            {
              "line": "Hmm, kalau kamu mau aku jelasin, kamu bayar pake es teh, deal ga?",
              "reactionIndex": 2,
              "characterIndex": 2
            },
            {
              "line": "HAHAHHHAHAH OKE DEAL! Kamu suka es teh ya?",
              "reactionIndex": 2,
              "characterIndex": 2
            },
            {
              "line": "Iya dong, es teh favoritku! Tapi serius, aku pengen bantu kok, asal traktir dulu.",
              "reactionIndex": 2,
              "characterIndex": 1
            },
            {
              "line": "Oke deh! Tapi jangan sampai aku jadi nganggur disini karena kamu terus yang ngoding.",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Tenang, aku juga mau nanti kamu coba sendiri kamu supaya kamu bisa paham",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Setuju! Jadi, mulai dari mana nih? Jelasin dong tentang array, struct, dan file itu.",
              "reactionIndex": 4,
              "characterIndex": 2
            }
          ],
          "next": "materi6_1",
          "nextType": "dialog"
        },
        {
          "id": "materi6_1",
          "dialogs": [
            {
              "line": "Oke Jen, bayangin komputer itu kayak gedung kantor pintar ini. Ini adalah 'Peta Penyimpanan Variabel' di dalamnya.",
              "reactionIndex": 4,
              "characterIndex": 1,
              "ilustrationIndex": 0
            },
            {
              "line": "Lihat, ada CPU si 'Otak Komputer', lalu 'Register' itu kantong super cepatnya. Variabel 'Global' itu kayak kotak harta di lobi utama, bisa diakses semua 'Ruang Kerja' atau fungsi.",
              "reactionIndex": 4,
              "characterIndex": 1,
              "ilustrationIndex": 0
            },
            {
              "line": "Nah, di dalam tiap 'Ruang Kerja' (fungsi), ada tempat untuk variabel 'Lokal' yang sifatnya rahasia, dan bisa juga ada yang 'Statis' dengan memori kuat. Masing-masing punya aturan sendiri.",
              "reactionIndex": 4,
              "characterIndex": 1,
              "ilustrationIndex": 0
            },
            {
              "line": "Wah, lengkap banget petanya, Dri! Jadi, yang dimaksud variabel 'Global' itu yang di lobi tadi ya, yang bisa diakses semua fungsi?",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Betul! Karena bisa diakses dari mana saja, kita harus hati-hati menggunakannya. Nah, untuk variabel Global ini, coba jawab soal berikut.",
              "reactionIndex": 4,
              "characterIndex": 1
            }
          ],
          "next": "soal6_1",
          "nextType": "soal"
        },
        {
          "id": "salah6_1",
          "dialogs": [
            {
              "line": "Yah salah ya ternyata",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Hmm... coba kita telaah bareng lagi, ya. Variabel global itu dideklarasikan di luar fungsi dan bisa diakses dari mana saja dalam program. Jadi coba cek mana yang ada di luar fungsi dan bisa dipakai di dalamnya.",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Ooh jadi yang di luar fungsi itu yang global, ya?",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Yup! Coba lihat lagi mana yang dideklarasikan di luar dan bisa diakses di dalam fungsi. Yuk, coba lagi!",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Oke aku coba lagi deh! Semoga benar!",
              "reactionIndex": 0,
              "characterIndex": 2
            }
          ],
          "next": "soal6_1",
          "nextType": "soal"
        },
        {
          "id": "materi6_2",
          "dialogs": [
            {
              "line": "Nah kamu bener tuh jawabnya Jen soal variabel Global. Oke sekarang masuk ke variabel Lokal ya. Ingat 'Ruang Kerja' di peta tadi?",
              "reactionIndex": 4,
              "characterIndex": 1
            },
            {
              "line": "Iya, Dri, yang ada kotak kecil di dalamnya itu kan?",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Betul! Variabel lokal itu kayak mainan rahasia di 'Ruang Kerja' itu. Cuma bisa dipakai di dalam fungsi itu saja. Begitu keluar fungsi, variabelnya hilang atau reset.",
              "reactionIndex": 4,
              "characterIndex": 1
            },
            {
              "line": "Ohhh gitu ya! Jadi variabel lokal cuma hidup di dalam fungsinya aja. Paham aku sekarang~",
              "reactionIndex": 2,
              "characterIndex": 2
            },
            {
              "line": "Wih, jago juga kamu sekarang! Kalau gitu, coba deh jawab soal ini biar makin mantap!",
              "reactionIndex": 4,
              "characterIndex": 1
            }
          ],
          "next": "soal6_2",
          "nextType": "soal"
        },
        {
          "id": "salah6_2",
          "dialogs": [
            {
              "line": "Belum tepat tuh Jen.",
              "reactionIndex": 1,
              "characterIndex": 1
            },
            {
              "line": "Wah aku salah ya? Aku kira udah bener.",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Gak apa-apa kok! Nih aku kasih bocoran dikit: variabel lokal itu yang dideklarasikan di dalam fungsi. Coba deh perhatikan di kode itu, mana yang ada di dalam fungsi `contoh()`?",
              "reactionIndex": 4,
              "characterIndex": 1
            },
            {
              "line": "Oooh... kayaknya aku mulai ngerti deh.",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Yap, lihat baik-baik ya. Yang di luar fungsi itu beda lagi jenisnya.",
              "reactionIndex": 0,
              "characterIndex": 1
            }
          ],
          "next": "soal6_2",
          "nextType": "soal"
        },
        {
          "id": "materi6_3",
          "dialogs": [
            {
              "line": "Nah pinter banget, kamu bener tuh jawabnya Jen soal variabel Lokal.",
              "reactionIndex": 4,
              "characterIndex": 1
            },
            {
              "line": "Asikk! Masih ada lagi, Dri, jenis variabelnya?",
              "reactionIndex": 2,
              "characterIndex": 2
            },
            {
              "line": "Ada dong! Sekarang variabel Statis. Lihat lagi 'Ruang Kerja' di peta tadi, ada kotak 'Statis' kan? Dia juga di dalam fungsi, tapi istimewa.",
              "reactionIndex": 4,
              "characterIndex": 1
            },
            {
              "line": "Istimewanya gimana tuh?",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Variabel statis itu kayak mainan yang punya memori kuat. Kalau kamu keluar dari fungsi, nilainya gak hilang! Pas fungsi dipanggil lagi, dia ingat nilai terakhirnya.",
              "reactionIndex": 4,
              "characterIndex": 1
            },
            {
              "line": "Wah, keren juga ya! Jadi dia gak reset kayak variabel lokal biasa?",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Iya, bener banget! Coba biar tambah paham, kamu kerjain soal ini deh.",
              "reactionIndex": 4,
              "characterIndex": 1
            }
          ],
          "next": "soal6_3",
          "nextType": "soal"
        },
        {
          "id": "salah6_3",
          "dialogs": [
            {
              "line": "Kamu jawabnya salah ya? Coba pikir lagi. Variabel statis itu memiliki perilaku yang sedikit berbeda dibandingkan dengan variabel biasa.",
              "reactionIndex": 1,
              "characterIndex": 1
            },
            {
              "line": "Yah salah ya ternyata.",
              "reactionIndex": 1,
              "characterIndex": 2
            },
            {
              "line": "Bayangkan kamu punya kotak (variabel) di dalam fungsi. Biasanya, setiap kali fungsi selesai dan dipanggil lagi, kotak itu kosong dan harus diisi ulang. Tapi kalau kamu pakai kotak khusus bernama 'static', isinya tetap ada meski fungsi selesai. Jadi pas fungsi dipanggil lagi, dia lanjut pakai nilai terakhirnya.",
              "reactionIndex": 4,
              "characterIndex": 1
            },
            {
              "line": "Hmm jadi variabel statis itu seperti tetap ada meskipun fungsi dipanggil lagi ya?",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Iya, benar! Coba perhatikan kode mana yang menggunakan 'static' pada deklarasi variabelnya, itu yang akan memiliki sifat seperti itu.",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Oke deh, aku bakal perhatikan lebih teliti",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Oke semangat yaa Jennie",
              "reactionIndex": 2,
              "characterIndex": 1
            }
          ],
          "next": "soal6_3",
          "nextType": "soal"
        },
        {
          "id": "materi6_4",
          "dialogs": [
            {
              "line": "Wah jawabanku bener nih soal variabel Statis!",
              "reactionIndex": 2,
              "characterIndex": 2
            },
            {
              "line": "Keren Jennie! Sekarang yang terakhir, variabel Register. Lihat lagi peta tadi, ada kotak 'Register' dekat CPU kan?",
              "reactionIndex": 4,
              "characterIndex": 1
            },
            {
              "line": "Iya, yang kecil itu ya? Fungsinya apa, Dri?",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Variabel register ini spesial, kita minta agar dia disimpan di 'kantong ajaib' CPU, bukan di memori utama (RAM). Tujuannya biar aksesnya super cepat!",
              "reactionIndex": 4,
              "characterIndex": 1
            },
            {
              "line": "Jadi kayak naruh barang penting di meja resepsionis biar bos (CPU) bisa langsung ambil gitu?",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Mirip gitu! Tapi karena tempatnya terbatas, biasanya ini cuma saran ke komputer, dan dipakai buat variabel yang sering banget diakses, kayak di dalam loop.",
              "reactionIndex": 4,
              "characterIndex": 1
            },
            {
              "line": "Ah paham, jadi variabel register itu lebih cepat karena disimpen langsung di CPU ya, atau diusahakan di sana.",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Betul! Nah, biar lebih paham lagi coba deh jawab soal ini.",
              "reactionIndex": 4,
              "characterIndex": 1
            }
          ],
          "next": "soal6_4",
          "nextType": "soal"
        },
        {
          "id": "salah6_4",
          "dialogs": [
            {
              "line": "Noo, Jawabanku salah.",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Oops Coba kita lihat lagi ya. Kalau variabel register, itu kita minta disimpan dekat CPU untuk akses cepat. Variabel statis beda lagi, dia mempertahankan nilainya antar pemanggilan fungsi.",
              "reactionIndex": 4,
              "characterIndex": 1
            },
            {
              "line": "Ooooh jadi register itu supaya aksesnya lebih cepat ya? Dan statis itu nilainya gak hilang. Terus kalau gitu, di kode tadi yang mana yang cocok?",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Tepat banget! Kompilator biasanya memilih variabel yang sering diakses dalam loop untuk register. Dan 'static' itu eksplisit ditulis. Coba lihat lagi deh kode ini.",
              "reactionIndex": 0,
              "characterIndex": 1
            },
            {
              "line": "Ah sekarang aku paham! Aku akan coba jawab lagi, semoga bisa lebih tepat!",
              "reactionIndex": 0,
              "characterIndex": 2
            },
            {
              "line": "Semangat Jennie! Kamu pasti bisa!",
              "reactionIndex": 2,
              "characterIndex": 1
            }
          ],
          "next": "soal6_4",
          "nextType": "soal"
        },
        {
          "id": "benar6_last",
          "dialogs": [
            {
              "line": "Nah udah bisa sekarang yaa. Jadi register itu buat variabel yang perlu akses cepat. Intinya ada 4 jenis utama yang kita bahas: Lokal di dalam fungsi, Global di luar fungsi, Statis yang nilainya awet antar pemanggilan fungsi, dan Register untuk ngebut!",
              "reactionIndex": 4,
              "characterIndex": 1
            },
            {
              "line": "Wah jadi gitu ya! Makasih banget, Dri! Akhirnya aku jadi ngerti. Nggak pusing lagi deh soal penyimpanan variabel.",
              "reactionIndex": 2,
              "characterIndex": 2
            },
            {
              "line": "Sama-sama, Jen, senang bisa bantu. Sekarang ayo kita pakai ilmu ini buat ngerjain proyek akhirmu!",
              "reactionIndex": 4,
              "characterIndex": 1
            },
            {
              "line": "Wow, ternyata semua yang aku pelajari mulai nyambung juga ya!",
              "reactionIndex": 2,
              "characterIndex": 2
            },
            {
              "line": "Iya, makin sering latihan, makin ngerti kok.",
              "reactionIndex": 2,
              "characterIndex": 1
            },
            {
              "line": "Thanks ya, Adrian. Beneran dah kamu jago banget!",
              "reactionIndex": 2,
              "characterIndex": 2
            }
          ],
          "next": null,
          "nextType": ""
        }
      ],
      "questions": [
        {
          "id": "soal6_1",
          "text": "Perhatikan potongan kode berikut. Menurutmu, manakah variabel global/eksternal dalam kode di atas?",
          "code": "int angka = 10;\nvoid fungsi() {\n    printf(\"%d\", angka);\n}",
          "choices": [
            {
              "text": "fungsi, karena dia bisa dipanggil dari mana saja.",
              "next": "salah6_1",
              "nextType": "dialog",
              "isCorrect": false
            },
            {
              "text": "angka, karena dideklarasikan di luar fungsi dan bisa diakses dari dalam fungsi.",
              "next": "materi6_2",
              "nextType": "dialog",
              "isCorrect": true
            },
            {
              "text": "printf, karena digunakan di dalam fungsi untuk menampilkan nilai.",
              "next": "salah6_1",
              "nextType": "dialog",
              "isCorrect": false
            },
            {
              "text": "int, karena semua variabel bertipe int pasti global.",
              "next": "salah6_1",
              "nextType": "dialog",
              "isCorrect": false
            }
          ]
        },
        {
          "id": "soal6_2",
          "text": "Perhatikan kode ini. Menurutmu, manakah variabel lokal dalam kode di atas?",
          "code": "#include <stdio.h>\n\nint a = 1;\nchar charku = 'c';\nfloat floatku = 29.2;\n\nvoid contoh() {\n    int angka = 10;\n    printf(\"%d\", angka);\n}",
          "choices": [
            {
              "text": "a",
              "next": "salah6_2",
              "nextType": "dialog",
              "isCorrect": false
            },
            {
              "text": "floatku",
              "next": "salah6_2",
              "nextType": "dialog",
              "isCorrect": false
            },
            {
              "text": "angka",
              "next": "materi6_3",
              "nextType": "dialog",
              "isCorrect": true
            },
            {
              "text": "charku",
              "next": "salah6_2",
              "nextType": "dialog",
              "isCorrect": false
            }
          ]
        },
        {
          "id": "soal6_3",
          "text": "Perhatikan potongan kode berikut! Manakah fungsi yang menggunakan variabel statis pada kode berikut?",
          "code": "void fungsi1() {\n    int x = 0;\n    x++;\n    printf(\"%d\", x);\n}\n\nvoid fungsi2() {\n    static int x = 0;\n    x++;\n    printf(\"%d\", x);\n}\n\nvoid fungsi3() {\n    int x = 0;\n    for(int i = 0; i < 5; i++) {\n        x++;\n    }\n    printf(\"%d\", x);\n}\n\nvoid fungsi4() {\n    int x = 0;\n    while(x < 5) {\n        x++;\n    }\n    printf(\"%d\", x);\n}",
          "choices": [
            {
              "text": "fungsi1",
              "next": "salah6_3",
              "nextType": "dialog",
              "isCorrect": false
            },
            {
              "text": "fungsi2",
              "next": "materi6_4",
              "nextType": "dialog",
              "isCorrect": true
            },
            {
              "text": "fungsi3",
              "next": "salah6_3",
              "nextType": "dialog",
              "isCorrect": false
            },
            {
              "text": "fungsi4",
              "next": "salah6_3",
              "nextType": "dialog",
              "isCorrect": false
            }
          ]
        },
        {
          "id": "soal6_4",
          "text": "Perhatikan potongan kode berikut. Dalam program di atas, mana yang merupakan variabel register dan variabel statis?",
          "code": "#include <stdio.h>\n\nvoid contoh() {\n    static int angka = 5; \n    register int i;       \n    for (i = 0; i < 3; i++) {\n        angka++;\n        printf(\"Angka: %d, i: %d\\n\", angka, i);\n    }\n}\n\nint main() {\n    contoh();\n    contoh();\n    return 0;\n}",
          "choices": [
            {
              "text": "angka adalah variabel register, i adalah variabel statis.",
              "next": "salah6_4",
              "nextType": "dialog",
              "isCorrect": false
            },
            {
              "text": "angka adalah variabel statis, i adalah variabel register.",
              "next": "benar6_last",
              "nextType": "dialog",
              "isCorrect": true
            },
            {
              "text": "angka dan i keduanya variabel register.",
              "next": "salah6_4",
              "nextType": "dialog",
              "isCorrect": false
            },
            {
              "text": "angka dan i keduanya variabel statis.",
              "next": "salah6_4",
              "nextType": "dialog",
              "isCorrect": false
            }
          ]
        }
      ],
      "summary": [
        "1. Variabel Lokal (Auto): dideklarasikan di dalam sebuah fungsi dan hanya bisa diakses selama fungsi tersebut berjalan. Setelah fungsi selesai, variabel lokal akan hilang dari memori. Secara default, semua variabel di dalam fungsi bersifat lokal.",
        "Contoh variabel lokal:",
        "#include <stdio.h>\n\nvoid contoh() {\n    int x = 10;  // Variabel lokal \n    printf(\"Nilai x: %d\\n\", x);\n}",
        "Penjelasan:\n- Variabel x adalah variabel lokal karena dideklarasikan di dalam fungsi contoh. Nilainya hanya ada selama fungsi berjalan dan hilang setelah fungsi selesai dieksekusi.",
        "2. Variabel Global (Eksternal): dideklarasikan diluar semua fungsi dan dapat diakses oleh semua fungsi dalam program. Variabel ini sering digunakan untuk menyimpan data yang dibutuhkan oleh banyak fungsi. Penggunaannya harus hati-hati karena perubahan nilai variabel global dapat mempengaruhi fungsi lainnya.",
        "Contoh variabel global:",
        "#include <stdio.h>\n\nint x = 10;  // Variabel global\n\nvoid contoh() {\n    printf(\"Nilai x: %d\\n\", x);  // Mengakses variabel global x\n}",
        "Penjelasan:\n- Variabel x adalah variabel global karena dideklarasikan di luar fungsi dan dapat diakses di dalam fungsi contoh.",
        "3. Variabel Statis: dideklarasikan di dalam fungsi, namun nilainya tidak hilang setelah fungsi selesai dieksekusi. Variabel ini akan menyimpan nilai terakhir yang dimiliki dan melanjutkan dari nilai tersebut ketika fungsi dipanggil lagi.",
        "Contoh variabel statis:",
        "#include <stdio.h>\n\nvoid contoh() {\n    static int count = 0;  // Variabel statis\n    count++;\n    printf(\"Count: %d\\n\", count);\n}",
        "Penjelasan:\n- Variabel count adalah variabel statis karena dideklarasikan dengan keyword static. Nilainya bertahan setelah fungsi selesai dieksekusi dan akan melanjutkan pada pemanggilan berikutnya.",
        "4. Variabel Register: disarankan disimpan di register CPU agar aksesnya lebih cepat. Biasanya untuk variabel yang sering diakses dalam program, seperti counter dalam perulangan. Penyimpanan variabel register tergantung pada kemampuan arsitektur komputer.",
        "Contoh variabel register:",
        "#include <stdio.h>\n\nint main() {\n    register int i;  // Variabel register\n    for (i = 0; i < 5; i++) {\n        printf(\"i: %d\\n\", i);\n    }\n    return 0;\n}",
        "Penjelasan:\n- Variabel i adalah variabel register yang digunakan di dalam perulangan for. Compiler mencoba untuk menyimpannya di register CPU agar proses lebih cepat."
      ]
    }
  ]
}
